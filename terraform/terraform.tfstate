{
  "version": 4,
  "terraform_version": "1.6.6",
  "serial": 531,
  "lineage": "0da03d60-4916-c482-35ce-45e5dba185ce",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "618214806620",
            "arn": "arn:aws:iam::618214806620:root",
            "id": "618214806620",
            "user_id": "618214806620"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_eks_cluster",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:eks:us-west-2:618214806620:cluster/superset-cluster",
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJQmZGb2R1TEhIcDB3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRBeE1URXdOakV4TVRaYUZ3MHpOREF4TURnd05qRTJNVFphTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUMyc0Y2SElQQTl6dWJMSlUzYXV0RmdsZEtHbURPa3QyQW82QmxSejZuSGVqLzB5MmlrVlRWa25lcysKMmxVSm9VMnMvTVRiQVJjM3o4eUdFQ3BRcTA2cjgwdWUwSGlJdVN5TGZyUmNtTGhCeFJPVHdYNnlwYTdqcDlkawplME9Fb3dPV29CZHFVZEhVcjVDTzY5REsxMUpaSnF2UmxxTDhIb0VXd1JiNWJMbTNuQmJVcURKQjkxR01lTnBwCmVYWUZIUVlEOFRJUnA5alFNUktCR0dPU2NvVVA3YkVRMDNxa3NHcEJxYnZFSUY3MUJTM1ZnQ3prWDd2MS9hbGMKbm1Ed3RydEhYeHNjeHFPdmowL25yWEZEYzlEUjhETmFYUEZ3SEdXcElTNUxBWThiTW43Z3V6c0ErcGdMZ3JvdwphMUlrSHI5ZUNGVllOTElWTGpFVTAxRzd3ZTh6QWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSWUlNbFpQVDZrT2htdVEzZXRyYmZHbWw4YXNEQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQVJhSEFsV0tkNAppTmU5MEFNYUhwbVJOUmtDNnpSZ1RNdlpnRWhmVXYwL0tzeldsQ00vYjVjVUdDV0lhSk00ZlJXaXZPS3RCeERZCkxKUVBrUmVKOFpYa01JZmMrVGljL2p0LzBTYzNheFgxMFFTUE50U2MwaithWkNpclVsSHNIMnhZSU5rcWNHcFYKUi9vaVRWWi9CTTNBR2JHajVkT21NVDF2aTA1ZElsNkRkN1FyVXRQQWdZNTg1ZWlybGI1ZjBqTWZDOUtBbWRScAptZk11N2VlLzRNUmZxVGQ0UE1KVVlkM3R5RjNSR1pGNjlrOXJ0NG5iYmtSNHFoTlNKem5jbGp6Z3pSVFduNlY0Cms2Wng2TW4xUTJEaldtVU0rbUhrMEt3TkptVHV1M09JTzk1TjB3a0wyU29pUlRTZm91cmhJSUVWR2ZmQ3d0MUoKT1dUcENxOXAxL0ZLCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
              }
            ],
            "cluster_id": null,
            "created_at": "2024-01-11 06:10:56.378 +0000 UTC",
            "enabled_cluster_log_types": [
              "api",
              "audit",
              "authenticator"
            ],
            "endpoint": "https://183AC2354170D59D406D00C505D3956B.gr7.us-west-2.eks.amazonaws.com",
            "id": "superset-cluster",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.us-west-2.amazonaws.com/id/183AC2354170D59D406D00C505D3956B"
                  }
                ]
              }
            ],
            "kubernetes_network_config": [
              {
                "ip_family": "ipv4",
                "service_ipv4_cidr": "172.20.0.0/16",
                "service_ipv6_cidr": ""
              }
            ],
            "name": "superset-cluster",
            "outpost_config": [],
            "platform_version": "eks.10",
            "role_arn": "arn:aws:iam::618214806620:role/superset-cluster-cluster-20240111061033500600000003",
            "status": "ACTIVE",
            "tags": {},
            "version": "1.27",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-0d90be6bbc67b711b",
                "endpoint_private_access": true,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-0c7959dcb165d6c95"
                ],
                "subnet_ids": [
                  "subnet-0017f503328b03400",
                  "subnet-0b2f66184c5561ca2",
                  "subnet-0e3dd2ce96486af92"
                ],
                "vpc_id": "vpc-0eff67b7fceb0e080"
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_eks_cluster_auth",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "superset-cluster",
            "name": "superset-cluster",
            "token": "k8s-aws-v1.aHR0cHM6Ly9zdHMuYW1hem9uYXdzLmNvbS8_QWN0aW9uPUdldENhbGxlcklkZW50aXR5JlZlcnNpb249MjAxMS0wNi0xNSZYLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFZNzREWktST0E2SkhPM1kyJTJGMjAyNDAxMTklMkZ1cy1lYXN0LTElMkZzdHMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDI0MDExOVQwNTA1MDZaJlgtQW16LUV4cGlyZXM9MCZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QlM0J4LWs4cy1hd3MtaWQmWC1BbXotU2lnbmF0dXJlPWE3ZTU1N2EyNTY4N2VkMWU2Y2M5NWE2MTdiNjkwMmYzYzhlNWZiNTE4NDE3MTM4YTI3MmE4MmVkNWJlMWM5ZjY"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_eks_addon",
      "name": "addons",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "aws-ebs-csi-driver",
          "schema_version": 0,
          "attributes": {
            "addon_name": "aws-ebs-csi-driver",
            "addon_version": "v1.26.1-eksbuild.1",
            "arn": "arn:aws:eks:us-west-2:618214806620:addon/superset-cluster/aws-ebs-csi-driver/22c68215-b4e9-b59b-c2e0-81261c7570b2",
            "cluster_name": "superset-cluster",
            "configuration_values": "",
            "created_at": "2024-01-13T18:52:50Z",
            "id": "superset-cluster:aws-ebs-csi-driver",
            "modified_at": "2024-01-14T20:13:23Z",
            "preserve": null,
            "resolve_conflicts": null,
            "resolve_conflicts_on_create": "OVERWRITE",
            "resolve_conflicts_on_update": "OVERWRITE",
            "service_account_role_arn": "arn:aws:iam::618214806620:role/ebs_csi_driver",
            "tags": {},
            "tags_all": {},
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjI0MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.ebs-csi-driver-role.aws_iam_role.this",
            "module.ebs-csi-driver-role.data.aws_caller_identity.current",
            "module.ebs-csi-driver-role.data.aws_iam_policy_document.this",
            "module.ebs-csi-driver-role.data.aws_partition.current",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "lb",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "aws-load-balancer-controller",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "aws-load-balancer-controller",
            "keyring": null,
            "lint": false,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v2.6.2",
                "chart": "aws-load-balancer-controller",
                "name": "aws-load-balancer-controller",
                "namespace": "kube-system",
                "revision": 1,
                "values": "{\"clusterName\":\"superset-cluster\",\"image\":{\"repository\":\"602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon/aws-load-balancer-controller\"},\"region\":\"us-west-2\",\"serviceAccount\":{\"create\":false,\"name\":\"aws-load-balancer-controller\"},\"vpcId\":\"vpc-0eff67b7fceb0e080\"}",
                "version": "1.6.2"
              }
            ],
            "name": "aws-load-balancer-controller",
            "namespace": "kube-system",
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://aws.github.io/eks-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "clusterName",
                "type": "",
                "value": "superset-cluster"
              },
              {
                "name": "image.repository",
                "type": "",
                "value": "602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon/aws-load-balancer-controller"
              },
              {
                "name": "region",
                "type": "",
                "value": "us-west-2"
              },
              {
                "name": "serviceAccount.create",
                "type": "",
                "value": "false"
              },
              {
                "name": "serviceAccount.name",
                "type": "",
                "value": "aws-load-balancer-controller"
              },
              {
                "name": "vpcId",
                "type": "",
                "value": "vpc-0eff67b7fceb0e080"
              }
            ],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "1.6.2",
            "wait": true
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "kubernetes_service_account.service-account",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.lb_role.aws_iam_role.this",
            "module.lb_role.data.aws_caller_identity.current",
            "module.lb_role.data.aws_iam_policy_document.this",
            "module.lb_role.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "superset",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "superset",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": true,
            "id": "my-superset",
            "keyring": null,
            "lint": false,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "3.0.0",
                "chart": "superset",
                "name": "my-superset",
                "namespace": "superset",
                "revision": 15,
                "values": "{\"affinity\":{},\"bootstrapScript\":\"#!/bin/bash\\napt-get update \\u0026\\u0026 apt-get -y install git\\npip install git+https://github.com/btfsoeon/PyAthena.git@7b9341839ee37a8b16e9c899177611cd24524484\\nif [ ! -f ~/bootstrap ]; then echo \\\"Running Superset with uid {{ .Values.runAsUser }}\\\" \\u003e ~/bootstrap; fi\\n\",\"configFromSecret\":\"{{ template \\\"superset.fullname\\\" . }}-config\",\"configMountPath\":\"/app/pythonpath\",\"configOverrides\":{},\"configOverridesFiles\":{},\"envFromSecret\":\"{{ template \\\"superset.fullname\\\" . }}-env\",\"envFromSecrets\":[],\"extraConfigMountPath\":\"/app/configs\",\"extraConfigs\":{},\"extraEnv\":{},\"extraEnvRaw\":[],\"extraSecretEnv\":{},\"extraSecrets\":{},\"extraVolumeMounts\":[],\"extraVolumes\":[],\"fullnameOverride\":null,\"hostAliases\":[],\"image\":{\"pullPolicy\":\"IfNotPresent\",\"repository\":\"apachesuperset.docker.scarf.sh/apache/superset\",\"tag\":\"\"},\"imagePullSecrets\":[],\"ingress\":{\"annotations\":{\"alb.ingress.kubernetes.io/scheme\":\"internet-facing\",\"alb.ingress.kubernetes.io/subnets\":\"superset-vpc-public-us-west-2a, superset-vpc-public-us-west-2b, superset-vpc-public-us-west-2c\"},\"enabled\":true,\"extraHostsRaw\":[],\"hosts\":[\"k8s-superset-mysupers-4cbb0064ba-1446489157.us-west-2.elb.amazonaws.com\"],\"ingressClassName\":\"alb\",\"path\":\"/*\",\"pathType\":\"ImplementationSpecific\",\"tls\":[]},\"init\":{\"adminUser\":{\"email\":\"admin@superset.com\",\"firstname\":\"Superset\",\"lastname\":\"Admin\",\"password\":\"admin\",\"username\":\"admin\"},\"affinity\":{},\"command\":[\"/bin/sh\",\"-c\",\". {{ .Values.configMountPath }}/superset_bootstrap.sh; . {{ .Values.configMountPath }}/superset_init.sh\"],\"containerSecurityContext\":{},\"createAdmin\":true,\"enabled\":true,\"extraContainers\":[],\"initContainers\":[{\"command\":[\"/bin/sh\",\"-c\",\"dockerize -wait \\\"tcp://$DB_HOST:$DB_PORT\\\" -timeout 120s\"],\"envFrom\":[{\"secretRef\":{\"name\":\"{{ tpl .Values.envFromSecret . }}\"}}],\"image\":\"{{ .Values.initImage.repository }}:{{ .Values.initImage.tag }}\",\"imagePullPolicy\":\"{{ .Values.initImage.pullPolicy }}\",\"name\":\"wait-for-postgres\"}],\"initscript\":\"#!/bin/sh\\nset -eu\\necho \\\"Upgrading DB schema...\\\"\\nsuperset db upgrade\\necho \\\"Initializing roles...\\\"\\nsuperset init\\n{{ if .Values.init.createAdmin }}\\necho \\\"Creating admin user...\\\"\\nsuperset fab create-admin \\\\\\n                --username {{ .Values.init.adminUser.username }} \\\\\\n                --firstname {{ .Values.init.adminUser.firstname }} \\\\\\n                --lastname {{ .Values.init.adminUser.lastname }} \\\\\\n                --email {{ .Values.init.adminUser.email }} \\\\\\n                --password {{ .Values.init.adminUser.password }} \\\\\\n                || true\\n{{- end }}\\n{{ if .Values.init.loadExamples }}\\necho \\\"Loading examples...\\\"\\nsuperset load_examples\\n{{- end }}\\nif [ -f \\\"{{ .Values.extraConfigMountPath }}/import_datasources.yaml\\\" ]; then\\n  echo \\\"Importing database connections.... \\\"\\n  superset import_datasources -p {{ .Values.extraConfigMountPath }}/import_datasources.yaml\\nfi\",\"jobAnnotations\":{\"helm.sh/hook\":\"post-install,post-upgrade\",\"helm.sh/hook-delete-policy\":\"before-hook-creation\"},\"loadExamples\":false,\"podAnnotations\":{},\"podSecurityContext\":{},\"resources\":{},\"tolerations\":[],\"topologySpreadConstraints\":[]},\"initImage\":{\"pullPolicy\":\"IfNotPresent\",\"repository\":\"apache/superset\",\"tag\":\"dockerize\"},\"nameOverride\":null,\"nodeSelector\":{},\"postgresql\":{\"auth\":{\"database\":\"superset\",\"existingSecret\":null,\"password\":\"superset\",\"username\":\"superset\"},\"enabled\":true,\"image\":{\"tag\":\"14.6.0-debian-11-r13\"},\"primary\":{\"persistence\":{\"accessModes\":[\"ReadWriteOnce\"],\"enabled\":true,\"storageClass\":\"gp2\"},\"service\":{\"ports\":{\"postgresql\":\"5432\"}}}},\"redis\":{\"architecture\":\"standalone\",\"auth\":{\"enabled\":false,\"existingSecret\":\"\",\"existingSecretKey\":\"\",\"password\":\"superset\"},\"enabled\":true,\"master\":{\"persistence\":{\"accessModes\":[\"ReadWriteOnce\"],\"enabled\":false}}},\"resources\":{},\"runAsUser\":0,\"service\":{\"annotations\":{},\"loadBalancerIP\":null,\"nodePort\":{\"http\":30000},\"port\":8088,\"type\":\"NodePort\"},\"serviceAccount\":{\"annotations\":{},\"create\":true},\"serviceAccountName\":null,\"supersetCeleryBeat\":{\"affinity\":{},\"command\":[\"/bin/sh\",\"-c\",\". {{ .Values.configMountPath }}/superset_bootstrap.sh; celery --app=superset.tasks.celery_app:app beat --pidfile /tmp/celerybeat.pid --schedule /tmp/celerybeat-schedule\"],\"containerSecurityContext\":{},\"deploymentAnnotations\":{},\"enabled\":false,\"extraContainers\":[],\"forceReload\":false,\"initContainers\":[{\"command\":[\"/bin/sh\",\"-c\",\"dockerize -wait \\\"tcp://$DB_HOST:$DB_PORT\\\" -wait \\\"tcp://$REDIS_HOST:$REDIS_PORT\\\" -timeout 120s\"],\"envFrom\":[{\"secretRef\":{\"name\":\"{{ tpl .Values.envFromSecret . }}\"}}],\"image\":\"{{ .Values.initImage.repository }}:{{ .Values.initImage.tag }}\",\"imagePullPolicy\":\"{{ .Values.initImage.pullPolicy }}\",\"name\":\"wait-for-postgres-redis\"}],\"podAnnotations\":{},\"podLabels\":{},\"podSecurityContext\":{},\"resources\":{},\"topologySpreadConstraints\":[]},\"supersetCeleryFlower\":{\"affinity\":{},\"command\":[\"/bin/sh\",\"-c\",\"celery --app=superset.tasks.celery_app:app flower\"],\"containerSecurityContext\":{},\"deploymentAnnotations\":{},\"enabled\":false,\"extraContainers\":[],\"initContainers\":[{\"command\":[\"/bin/sh\",\"-c\",\"dockerize -wait \\\"tcp://$DB_HOST:$DB_PORT\\\" -wait \\\"tcp://$REDIS_HOST:$REDIS_PORT\\\" -timeout 120s\"],\"envFrom\":[{\"secretRef\":{\"name\":\"{{ tpl .Values.envFromSecret . }}\"}}],\"image\":\"{{ .Values.initImage.repository }}:{{ .Values.initImage.tag }}\",\"imagePullPolicy\":\"{{ .Values.initImage.pullPolicy }}\",\"name\":\"wait-for-postgres-redis\"}],\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/api/workers\",\"port\":\"flower\"},\"initialDelaySeconds\":5,\"periodSeconds\":5,\"successThreshold\":1,\"timeoutSeconds\":1},\"podAnnotations\":{},\"podLabels\":{},\"podSecurityContext\":{},\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/api/workers\",\"port\":\"flower\"},\"initialDelaySeconds\":5,\"periodSeconds\":5,\"successThreshold\":1,\"timeoutSeconds\":1},\"replicaCount\":1,\"resources\":{},\"service\":{\"annotations\":{},\"loadBalancerIP\":null,\"nodePort\":{\"http\":\"nil\"},\"port\":5555,\"type\":\"ClusterIP\"},\"startupProbe\":{\"failureThreshold\":60,\"httpGet\":{\"path\":\"/api/workers\",\"port\":\"flower\"},\"initialDelaySeconds\":5,\"periodSeconds\":5,\"successThreshold\":1,\"timeoutSeconds\":1},\"topologySpreadConstraints\":[]},\"supersetNode\":{\"affinity\":{},\"autoscaling\":{\"enabled\":false,\"maxReplicas\":100,\"minReplicas\":1,\"targetCPUUtilizationPercentage\":80},\"command\":[\"/bin/sh\",\"-c\",\". {{ .Values.configMountPath }}/superset_bootstrap.sh; /usr/bin/run-server.sh\"],\"connections\":{\"db_host\":\"{{ .Release.Name }}-postgresql\",\"db_name\":\"superset\",\"db_pass\":\"superset\",\"db_port\":\"5432\",\"db_user\":\"superset\",\"redis_host\":\"{{ .Release.Name }}-redis-headless\",\"redis_port\":\"6379\"},\"containerSecurityContext\":{},\"deploymentAnnotations\":{},\"deploymentLabels\":{},\"env\":{},\"extraContainers\":[],\"forceReload\":false,\"initContainers\":[{\"command\":[\"/bin/sh\",\"-c\",\"dockerize -wait \\\"tcp://$DB_HOST:$DB_PORT\\\" -timeout 120s\"],\"envFrom\":[{\"secretRef\":{\"name\":\"{{ tpl .Values.envFromSecret . }}\"}}],\"image\":\"{{ .Values.initImage.repository }}:{{ .Values.initImage.tag }}\",\"imagePullPolicy\":\"{{ .Values.initImage.pullPolicy }}\",\"name\":\"wait-for-postgres\"}],\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/health\",\"port\":\"http\"},\"initialDelaySeconds\":15,\"periodSeconds\":15,\"successThreshold\":1,\"timeoutSeconds\":1},\"podAnnotations\":{},\"podLabels\":{},\"podSecurityContext\":{},\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/health\",\"port\":\"http\"},\"initialDelaySeconds\":15,\"periodSeconds\":15,\"successThreshold\":1,\"timeoutSeconds\":1},\"replicaCount\":1,\"resources\":{},\"startupProbe\":{\"failureThreshold\":60,\"httpGet\":{\"path\":\"/health\",\"port\":\"http\"},\"initialDelaySeconds\":15,\"periodSeconds\":5,\"successThreshold\":1,\"timeoutSeconds\":1},\"strategy\":{},\"topologySpreadConstraints\":[]},\"supersetWebsockets\":{\"affinity\":{},\"command\":[],\"config\":{\"jwtCookieName\":\"async-token\",\"jwtSecret\":\"CHANGE-ME\",\"logFilename\":\"app.log\",\"logLevel\":\"debug\",\"logToFile\":false,\"port\":8080,\"redis\":{\"db\":0,\"host\":\"127.0.0.1\",\"password\":\"\",\"port\":6379,\"ssl\":false},\"redisStreamPrefix\":\"async-events-\",\"statsd\":{\"globalTags\":[],\"host\":\"127.0.0.1\",\"port\":8125}},\"containerSecurityContext\":{},\"deploymentAnnotations\":{},\"enabled\":false,\"extraContainers\":[],\"image\":{\"pullPolicy\":\"IfNotPresent\",\"repository\":\"oneacrefund/superset-websocket\",\"tag\":\"latest\"},\"ingress\":{\"path\":\"/ws\",\"pathType\":\"Prefix\"},\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/health\",\"port\":\"ws\"},\"initialDelaySeconds\":5,\"periodSeconds\":5,\"successThreshold\":1,\"timeoutSeconds\":1},\"podAnnotations\":{},\"podLabels\":{},\"podSecurityContext\":{},\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/health\",\"port\":\"ws\"},\"initialDelaySeconds\":5,\"periodSeconds\":5,\"successThreshold\":1,\"timeoutSeconds\":1},\"replicaCount\":1,\"resources\":{},\"service\":{\"annotations\":{},\"loadBalancerIP\":null,\"nodePort\":{\"http\":\"nil\"},\"port\":8080,\"type\":\"ClusterIP\"},\"startupProbe\":{\"failureThreshold\":60,\"httpGet\":{\"path\":\"/health\",\"port\":\"ws\"},\"initialDelaySeconds\":5,\"periodSeconds\":5,\"successThreshold\":1,\"timeoutSeconds\":1},\"strategy\":{},\"topologySpreadConstraints\":[]},\"supersetWorker\":{\"affinity\":{},\"autoscaling\":{\"enabled\":false,\"maxReplicas\":100,\"minReplicas\":1,\"targetCPUUtilizationPercentage\":80},\"command\":[\"/bin/sh\",\"-c\",\". {{ .Values.configMountPath }}/superset_bootstrap.sh; celery --app=superset.tasks.celery_app:app worker\"],\"containerSecurityContext\":{},\"deploymentAnnotations\":{},\"deploymentLabels\":{},\"extraContainers\":[],\"forceReload\":false,\"initContainers\":[{\"command\":[\"/bin/sh\",\"-c\",\"dockerize -wait \\\"tcp://$DB_HOST:$DB_PORT\\\" -wait \\\"tcp://$REDIS_HOST:$REDIS_PORT\\\" -timeout 120s\"],\"envFrom\":[{\"secretRef\":{\"name\":\"{{ tpl .Values.envFromSecret . }}\"}}],\"image\":\"{{ .Values.initImage.repository }}:{{ .Values.initImage.tag }}\",\"imagePullPolicy\":\"{{ .Values.initImage.pullPolicy }}\",\"name\":\"wait-for-postgres-redis\"}],\"livenessProbe\":{\"exec\":{\"command\":[\"sh\",\"-c\",\"celery -A superset.tasks.celery_app:app inspect ping -d celery@$HOSTNAME\"]},\"failureThreshold\":3,\"initialDelaySeconds\":120,\"periodSeconds\":60,\"successThreshold\":1,\"timeoutSeconds\":60},\"podAnnotations\":{},\"podLabels\":{},\"podSecurityContext\":{},\"readinessProbe\":{},\"replicaCount\":1,\"resources\":{},\"startupProbe\":{},\"strategy\":{},\"topologySpreadConstraints\":[]},\"tolerations\":[],\"topologySpreadConstraints\":[]}",
                "version": "0.10.9"
              }
            ],
            "name": "my-superset",
            "namespace": "superset",
            "postrender": [],
            "recreate_pods": true,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://apache.github.io/superset",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": true,
            "set": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "#\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n# Default values for superset.\n# This is a YAML-formatted file.\n# Declare variables to be passed into your templates.\n\n# A README is automatically generated from this file to document it, using helm-docs (see https://github.com/norwoodj/helm-docs)\n# To update it, install helm-docs and run helm-docs from the root of this chart\n\n# -- Provide a name to override the name of the chart\nnameOverride: ~\n# -- Provide a name to override the full names of resources\nfullnameOverride: ~\n\n# -- User ID directive. This user must have enough permissions to run the bootstrap script\n# Running containers as root is not recommended in production. Change this to another UID - e.g. 1000 to be more secure\nrunAsUser: 0\n\n# -- Specify service account name to be used\nserviceAccountName: ~\nserviceAccount:\n  # -- Create custom service account for Superset. If create: true and serviceAccountName is not provided, `superset.fullname` will be used.\n  create: true\n  annotations: {}\n\n# -- Install additional packages and do any other bootstrap configuration in this script\n# For production clusters it's recommended to build own image with this step done in CI\n# @default -- see `values.yaml`\nbootstrapScript: |\n  #!/bin/bash\n  apt-get update \u0026\u0026 apt-get -y install git\n  pip install git+https://github.com/btfsoeon/PyAthena.git@7b9341839ee37a8b16e9c899177611cd24524484\n  if [ ! -f ~/bootstrap ]; then echo \"Running Superset with uid {{ .Values.runAsUser }}\" \u003e ~/bootstrap; fi\n\n# -- The name of the secret which we will use to generate a superset_config.py file\n# Note: this secret must have the key superset_config.py in it and can include other files as well\nconfigFromSecret: '{{ template \"superset.fullname\" . }}-config'\n\n# -- The name of the secret which we will use to populate env vars in deployed pods\n# This can be useful for secret keys, etc.\nenvFromSecret: '{{ template \"superset.fullname\" . }}-env'\n# -- This can be a list of templated strings\nenvFromSecrets: []\n\n# -- Extra environment variables that will be passed into pods\nextraEnv: {}\n  # Different gunicorn settings, refer to the gunicorn documentation\n  # https://docs.gunicorn.org/en/stable/settings.html#\n  # These variables are used as Flags at the gunicorn startup\n  # https://github.com/apache/superset/blob/master/docker/run-server.sh#L22\n  # Extend timeout to allow long running queries.\n  # GUNICORN_TIMEOUT: 300\n  # Increase the gunicorn worker amount, can improve performance drastically\n  # See: https://docs.gunicorn.org/en/stable/design.html#how-many-workers\n  # SERVER_WORKER_AMOUNT: 4\n  # WORKER_MAX_REQUESTS: 0\n  # WORKER_MAX_REQUESTS_JITTER: 0\n  # SERVER_THREADS_AMOUNT: 20\n  # GUNICORN_KEEPALIVE: 2\n  # SERVER_LIMIT_REQUEST_LINE: 0\n  # SERVER_LIMIT_REQUEST_FIELD_SIZE: 0\n\n  # OAUTH_HOME_DOMAIN: ..\n  # # If a whitelist is not set, any address that can use your OAuth2 endpoint will be able to login.\n  # #   this includes any random Gmail address if your OAuth2 Web App is set to External.\n  # OAUTH_WHITELIST_REGEX: ...\n\n# -- Extra environment variables in RAW format that will be passed into pods\nextraEnvRaw: []\n  # Load DB password from other secret (e.g. for zalando operator)\n  # - name: DB_PASS\n  #   valueFrom:\n  #     secretKeyRef:\n  #       name: superset.superset-postgres.credentials.postgresql.acid.zalan.do\n  #       key: password\n\n# -- Extra environment variables to pass as secrets\nextraSecretEnv: {}\n  # MAPBOX_API_KEY: ...\n  # # Google API Keys: https://console.cloud.google.com/apis/credentials\n  # GOOGLE_KEY: ...\n  # GOOGLE_SECRET: ...\n  #   # Generate your own secret key for encryption. Use openssl rand -base64 42 to generate a good key\n  #  SUPERSET_SECRET_KEY: 'CHANGE_ME_TO_A_COMPLEX_RANDOM_SECRET'\n\n# -- Extra files to mount on `/app/pythonpath`\nextraConfigs: {}\n  # import_datasources.yaml: |\n  #     databases:\n  #     - allow_file_upload: true\n  #       allow_ctas: true\n  #       allow_cvas: true\n  #       database_name: example-db\n  #       extra: \"{\\r\\n    \\\"metadata_params\\\": {},\\r\\n    \\\"engine_params\\\": {},\\r\\n    \\\"\\\n  #         metadata_cache_timeout\\\": {},\\r\\n    \\\"schemas_allowed_for_file_upload\\\": []\\r\\n\\\n  #         }\"\n  #       sqlalchemy_uri: example://example-db.local\n  #       tables: []\n\n# -- Extra files to mount on `/app/pythonpath` as secrets\nextraSecrets: {}\n\nextraVolumes: []\n  # - name: customConfig\n  #   configMap:\n  #     name: '{{ template \"superset.fullname\" . }}-custom-config'\n  # - name: additionalSecret\n  #   secret:\n  #     secretName: my-secret\n  #     defaultMode: 0600\n\nextraVolumeMounts: []\n  # - name: customConfig\n  #   mountPath: /mnt/config\n  #   readOnly: true\n  # - name: additionalSecret:\n  #   mountPath: /mnt/secret\n\n# -- A dictionary of overrides to append at the end of superset_config.py - the name does not matter\n# WARNING: the order is not guaranteed\n# Files can be passed as helm --set-file configOverrides.my-override=my-file.py\nconfigOverrides: {}\n  # extend_timeout: |\n  #    # Extend timeout to allow long running queries.\n  #    SUPERSET_WEBSERVER_TIMEOUT = ...\n  # enable_oauth: |\n  #   from flask_appbuilder.security.manager import (AUTH_DB, AUTH_OAUTH)\n  #   AUTH_TYPE = AUTH_OAUTH\n  #   OAUTH_PROVIDERS = [\n  #       {\n  #           \"name\": \"google\",\n  #           \"whitelist\": [ os.getenv(\"OAUTH_WHITELIST_REGEX\", \"\") ],\n  #           \"icon\": \"fa-google\",\n  #           \"token_key\": \"access_token\",\n  #           \"remote_app\": {\n  #               \"client_id\": os.environ.get(\"GOOGLE_KEY\"),\n  #               \"client_secret\": os.environ.get(\"GOOGLE_SECRET\"),\n  #               \"api_base_url\": \"https://www.googleapis.com/oauth2/v2/\",\n  #               \"client_kwargs\": {\"scope\": \"email profile\"},\n  #               \"request_token_url\": None,\n  #               \"access_token_url\": \"https://accounts.google.com/o/oauth2/token\",\n  #               \"authorize_url\": \"https://accounts.google.com/o/oauth2/auth\",\n  #               \"authorize_params\": {\"hd\": os.getenv(\"OAUTH_HOME_DOMAIN\", \"\")}\n  #           }\n  #       }\n  #   ]\n  #   # Map Authlib roles to superset roles\n  #   AUTH_ROLE_ADMIN = 'Admin'\n  #   AUTH_ROLE_PUBLIC = 'Public'\n  #   # Will allow user self registration, allowing to create Flask users from Authorized User\n  #   AUTH_USER_REGISTRATION = True\n  #   # The default user self registration role\n  #   AUTH_USER_REGISTRATION_ROLE = \"Admin\"\n  # secret: |\n  #   # Generate your own secret key for encryption. Use openssl rand -base64 42 to generate a good key\n  #   SECRET_KEY = 'YOUR_OWN_RANDOM_GENERATED_SECRET_KEY'\n\n# -- Same as above but the values are files\nconfigOverridesFiles: {}\n  # extend_timeout: extend_timeout.py\n  # enable_oauth: enable_oauth.py\n\nconfigMountPath: \"/app/pythonpath\"\n\nextraConfigMountPath: \"/app/configs\"\n\nimage:\n  repository: apachesuperset.docker.scarf.sh/apache/superset\n  tag: \"\"\n  # repository: public.ecr.aws/a4o6f0k4/my-superset\n  # tag: 1.0.17\n  pullPolicy: IfNotPresent\n\nimagePullSecrets: []\n\ninitImage:\n  repository: apache/superset\n  tag: dockerize\n  pullPolicy: IfNotPresent\n\nservice:\n  type: NodePort\n  port: 8088\n  annotations: {}\n    # cloud.google.com/load-balancer-type: \"Internal\"\n  loadBalancerIP: ~\n  nodePort:\n    # -- (int)\n    http: 30000\n\ningress:\n  enabled: true\n  ingressClassName: alb\n  annotations: {\n    alb.ingress.kubernetes.io/scheme: \"internet-facing\",\n    # kubernetes.io/role/elb: \"\",\n    alb.ingress.kubernetes.io/subnets: 'superset-vpc-public-us-west-2a, superset-vpc-public-us-west-2b, superset-vpc-public-us-west-2c'\n  }\n    # kubernetes.io/tls-acme: \"true\"\n    ## Extend timeout to allow long running queries.\n    # nginx.ingress.kubernetes.io/proxy-connect-timeout: \"300\"\n    # nginx.ingress.kubernetes.io/proxy-read-timeout: \"300\"\n    # nginx.ingress.kubernetes.io/proxy-send-timeout: \"300\"\n  path: /*\n  pathType: ImplementationSpecific\n  hosts:\n    - k8s-superset-mysupers-4cbb0064ba-1446489157.us-west-2.elb.amazonaws.com\n  tls: []\n  extraHostsRaw: []\n  #  - secretName: chart-example-tls\n  #    hosts:\n  #      - chart-example.local\n\nresources: {}\n  # We usually recommend not to specify default resources and to leave this as a conscious\n  # choice for the user. This also increases chances charts run on environments with little\n  # resources, such as Minikube. If you do want to specify resources, uncomment the following\n  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n  # The limits below will apply to all Superset components. To set individual resource limitations refer to the pod specific values below.\n  # The pod specific values will overwrite anything that is set here.\n  # limits:\n  #   cpu: 100m\n  #   memory: 128Mi\n  # requests:\n  #   cpu: 100m\n  #   memory: 128Mi\n\n# -- Custom hostAliases for all superset pods\n## https://kubernetes.io/docs/tasks/network/customize-hosts-file-for-pods/\nhostAliases: []\n# - hostnames:\n#   - nodns.my.lan\n#   ip: 18.27.36.45\n\n# Superset node configuration\nsupersetNode:\n  replicaCount: 1\n  autoscaling:\n    enabled: false\n    minReplicas: 1\n    maxReplicas: 100\n    targetCPUUtilizationPercentage: 80\n    # targetMemoryUtilizationPercentage: 80\n\n  # -- Startup command\n  # @default -- See `values.yaml`\n  command:\n    - \"/bin/sh\"\n    - \"-c\"\n    - \". {{ .Values.configMountPath }}/superset_bootstrap.sh; /usr/bin/run-server.sh\"\n  connections:\n    # -- Change in case of bringing your own redis and then also set redis.enabled:false\n    redis_host: '{{ .Release.Name }}-redis-headless'\n    # redis_password: superset\n    redis_port: \"6379\"\n    # You need to change below configuration incase bringing own PostgresSQL instance and also set postgresql.enabled:false\n    db_host: '{{ .Release.Name }}-postgresql'\n    db_port: \"5432\"\n    db_user: superset\n    db_pass: superset\n    db_name: superset\n  env: {}\n  # -- If true, forces deployment to reload on each upgrade\n  forceReload: false\n  # -- Init containers\n  # @default -- a container waiting for postgres\n  initContainers:\n    - name: wait-for-postgres\n      image: \"{{ .Values.initImage.repository }}:{{ .Values.initImage.tag }}\"\n      imagePullPolicy: \"{{ .Values.initImage.pullPolicy }}\"\n      envFrom:\n        - secretRef:\n            name: \"{{ tpl .Values.envFromSecret . }}\"\n      command:\n        - /bin/sh\n        - -c\n        - dockerize -wait \"tcp://$DB_HOST:$DB_PORT\" -timeout 120s\n\n  # -- Launch additional containers into supersetNode pod\n  extraContainers: []\n  # -- Annotations to be added to supersetNode deployment\n  deploymentAnnotations: {}\n  # -- Labels to be added to supersetNode deployment\n  deploymentLabels: {}\n  # -- Affinity to be added to supersetNode deployment\n  affinity: {}\n  # -- TopologySpreadConstrains to be added to supersetNode deployments\n  topologySpreadConstraints: []\n  # -- Annotations to be added to supersetNode pods\n  podAnnotations: {}\n  # -- Labels to be added to supersetNode pods\n  podLabels: {}\n  startupProbe:\n    httpGet:\n      path: /health\n      port: http\n    initialDelaySeconds: 15\n    timeoutSeconds: 1\n    failureThreshold: 60\n    periodSeconds: 5\n    successThreshold: 1\n  livenessProbe:\n    httpGet:\n      path: /health\n      port: http\n    initialDelaySeconds: 15\n    timeoutSeconds: 1\n    failureThreshold: 3\n    periodSeconds: 15\n    successThreshold: 1\n  readinessProbe:\n    httpGet:\n      path: /health\n      port: http\n    initialDelaySeconds: 15\n    timeoutSeconds: 1\n    failureThreshold: 3\n    periodSeconds: 15\n    successThreshold: 1\n  # -- Resource settings for the supersetNode pods - these settings overwrite might existing values from the global resources object defined above.\n  resources: {}\n    # limits:\n    #  cpu: 100m\n    #  memory: 128Mi\n    # requests:\n    #  cpu: 100m\n    #  memory: 128Mi\n  podSecurityContext: {}\n  containerSecurityContext: {}\n  strategy: {}\n    # type: RollingUpdate\n    # rollingUpdate:\n    #   maxSurge: 25%\n    #   maxUnavailable: 25%\n\n# Superset Celery worker configuration\nsupersetWorker:\n  replicaCount: 1\n  autoscaling:\n    enabled: false\n    minReplicas: 1\n    maxReplicas: 100\n    targetCPUUtilizationPercentage: 80\n    # targetMemoryUtilizationPercentage: 80\n\n  # -- Worker startup command\n  # @default -- a `celery worker` command\n  command:\n    - \"/bin/sh\"\n    - \"-c\"\n    - \". {{ .Values.configMountPath }}/superset_bootstrap.sh; celery --app=superset.tasks.celery_app:app worker\"\n  # -- If true, forces deployment to reload on each upgrade\n  forceReload: false\n  # -- Init container\n  # @default -- a container waiting for postgres and redis\n  initContainers:\n    - name: wait-for-postgres-redis\n      image: \"{{ .Values.initImage.repository }}:{{ .Values.initImage.tag }}\"\n      imagePullPolicy: \"{{ .Values.initImage.pullPolicy }}\"\n      envFrom:\n        - secretRef:\n            name: \"{{ tpl .Values.envFromSecret . }}\"\n      command:\n        - /bin/sh\n        - -c\n        - dockerize -wait \"tcp://$DB_HOST:$DB_PORT\" -wait \"tcp://$REDIS_HOST:$REDIS_PORT\" -timeout 120s\n  # -- Launch additional containers into supersetWorker pod\n  extraContainers: []\n  # -- Annotations to be added to supersetWorker deployment\n  deploymentAnnotations: {}\n  # -- Labels to be added to supersetWorker deployment\n  deploymentLabels: {}\n  # -- Affinity to be added to supersetWorker deployment\n  affinity: {}\n  # -- TopologySpreadConstrains to be added to supersetWorker deployments\n  topologySpreadConstraints: []\n  # -- Annotations to be added to supersetWorker pods\n  podAnnotations: {}\n  # -- Labels to be added to supersetWorker pods\n  podLabels: {}\n  # -- Resource settings for the supersetWorker pods - these settings overwrite might existing values from the global resources object defined above.\n  resources: {}\n    # limits:\n    #  cpu: 100m\n    #  memory: 128Mi\n    # requests:\n    #  cpu: 100m\n    #  memory: 128Mi\n  podSecurityContext: {}\n  containerSecurityContext: {}\n  strategy: {}\n    # type: RollingUpdate\n    # rollingUpdate:\n    #   maxSurge: 25%\n    #   maxUnavailable: 25%\n  livenessProbe:\n    exec:\n      # -- Liveness probe command\n      # @default -- a `celery inspect ping` command\n      command:\n        - sh\n        - -c\n        - celery -A superset.tasks.celery_app:app inspect ping -d celery@$HOSTNAME\n    initialDelaySeconds: 120\n    timeoutSeconds: 60\n    failureThreshold: 3\n    periodSeconds: 60\n    successThreshold: 1\n  # -- No startup/readiness probes by default since we don't really care about its startup time (it doesn't serve traffic)\n  startupProbe: {}\n  # -- No startup/readiness probes by default since we don't really care about its startup time (it doesn't serve traffic)\n  readinessProbe: {}\n\n# Superset beat configuration (to trigger scheduled jobs like reports)\nsupersetCeleryBeat:\n  # -- This is only required if you intend to use alerts and reports\n  enabled: false\n  # -- Command\n  # @default -- a `celery beat` command\n  command:\n    - \"/bin/sh\"\n    - \"-c\"\n    - \". {{ .Values.configMountPath }}/superset_bootstrap.sh; celery --app=superset.tasks.celery_app:app beat --pidfile /tmp/celerybeat.pid --schedule /tmp/celerybeat-schedule\"\n  # -- If true, forces deployment to reload on each upgrade\n  forceReload: false\n  # -- List of init containers\n  # @default -- a container waiting for postgres\n  initContainers:\n    - name: wait-for-postgres-redis\n      image: \"{{ .Values.initImage.repository }}:{{ .Values.initImage.tag }}\"\n      imagePullPolicy: \"{{ .Values.initImage.pullPolicy }}\"\n      envFrom:\n        - secretRef:\n            name: \"{{ tpl .Values.envFromSecret . }}\"\n      command:\n        - /bin/sh\n        - -c\n        - dockerize -wait \"tcp://$DB_HOST:$DB_PORT\" -wait \"tcp://$REDIS_HOST:$REDIS_PORT\" -timeout 120s\n  # -- Launch additional containers into supersetCeleryBeat pods\n  extraContainers: []\n  # -- Annotations to be added to supersetCeleryBeat deployment\n  deploymentAnnotations: {}\n  # -- Affinity to be added to supersetCeleryBeat deployment\n  affinity: {}\n  # -- TopologySpreadConstrains to be added to supersetCeleryBeat deployments\n  topologySpreadConstraints: []\n  # -- Annotations to be added to supersetCeleryBeat pods\n  podAnnotations: {}\n  # -- Labels to be added to supersetCeleryBeat pods\n  podLabels: {}\n  # -- Resource settings for the CeleryBeat pods - these settings overwrite might existing values from the global resources object defined above.\n  resources: {}\n    # limits:\n    #  cpu: 100m\n    #  memory: 128Mi\n    # requests:\n    #  cpu: 100m\n    #  memory: 128Mi\n  podSecurityContext: {}\n  containerSecurityContext: {}\n\nsupersetCeleryFlower:\n  # -- Enables a Celery flower deployment (management UI to monitor celery jobs)\n  # WARNING: on superset 1.x, this requires a Superset image that has `flower\u003c1.0.0` installed (which is NOT the case of the default images)\n  # flower\u003e=1.0.0 requires Celery 5+ which Superset 1.5 does not support\n  enabled: false\n  replicaCount: 1\n  # -- Command\n  # @default -- a `celery flower` command\n  command:\n    - \"/bin/sh\"\n    - \"-c\"\n    - \"celery --app=superset.tasks.celery_app:app flower\"\n  service:\n    type: ClusterIP\n    annotations: {}\n    loadBalancerIP: ~\n    port: 5555\n    nodePort:\n      # -- (int)\n      http: nil\n  startupProbe:\n    httpGet:\n      path: /api/workers\n      port: flower\n    initialDelaySeconds: 5\n    timeoutSeconds: 1\n    failureThreshold: 60\n    periodSeconds: 5\n    successThreshold: 1\n  livenessProbe:\n    httpGet:\n      path: /api/workers\n      port: flower\n    initialDelaySeconds: 5\n    timeoutSeconds: 1\n    failureThreshold: 3\n    periodSeconds: 5\n    successThreshold: 1\n  readinessProbe:\n    httpGet:\n      path: /api/workers\n      port: flower\n    initialDelaySeconds: 5\n    timeoutSeconds: 1\n    failureThreshold: 3\n    periodSeconds: 5\n    successThreshold: 1\n  # -- List of init containers\n  # @default -- a container waiting for postgres and redis\n  initContainers:\n    - name: wait-for-postgres-redis\n      image: \"{{ .Values.initImage.repository }}:{{ .Values.initImage.tag }}\"\n      imagePullPolicy: \"{{ .Values.initImage.pullPolicy }}\"\n      envFrom:\n        - secretRef:\n            name: \"{{ tpl .Values.envFromSecret . }}\"\n      command:\n        - /bin/sh\n        - -c\n        - dockerize -wait \"tcp://$DB_HOST:$DB_PORT\" -wait \"tcp://$REDIS_HOST:$REDIS_PORT\" -timeout 120s\n  # -- Launch additional containers into supersetCeleryFlower pods\n  extraContainers: []\n  # -- Annotations to be added to supersetCeleryFlower deployment\n  deploymentAnnotations: {}\n  # -- Affinity to be added to supersetCeleryFlower deployment\n  affinity: {}\n  # -- TopologySpreadConstrains to be added to supersetCeleryFlower deployments\n  topologySpreadConstraints: []\n  # -- Annotations to be added to supersetCeleryFlower pods\n  podAnnotations: {}\n  # -- Labels to be added to supersetCeleryFlower pods\n  podLabels: {}\n  # -- Resource settings for the CeleryBeat pods - these settings overwrite might existing values from the global resources object defined above.\n  resources: {}\n    # limits:\n    #  cpu: 100m\n    #  memory: 128Mi\n    # requests:\n    #  cpu: 100m\n    #  memory: 128Mi\n  podSecurityContext: {}\n  containerSecurityContext: {}\n\nsupersetWebsockets:\n  # -- This is only required if you intend to use `GLOBAL_ASYNC_QUERIES` in `ws` mode\n  # see https://github.com/apache/superset/blob/master/CONTRIBUTING.md#async-chart-queries\n  enabled: false\n  replicaCount: 1\n  ingress:\n    path: /ws\n    pathType: Prefix\n  image:\n    # -- There is no official image (yet), this one is community-supported\n    repository: oneacrefund/superset-websocket\n    tag: latest\n    pullPolicy: IfNotPresent\n  # -- The config.json to pass to the server, see https://github.com/apache/superset/tree/master/superset-websocket\n  # Note that the configuration can also read from environment variables (which will have priority), see https://github.com/apache/superset/blob/master/superset-websocket/src/config.ts for a list of supported variables\n  # @default -- see `values.yaml`\n  config:\n    {\n      \"port\": 8080,\n      \"logLevel\": \"debug\",\n      \"logToFile\": false,\n      \"logFilename\": \"app.log\",\n      \"statsd\": { \"host\": \"127.0.0.1\", \"port\": 8125, \"globalTags\": [] },\n      \"redis\":\n        {\n          \"port\": 6379,\n          \"host\": \"127.0.0.1\",\n          \"password\": \"\",\n          \"db\": 0,\n          \"ssl\": false,\n        },\n      \"redisStreamPrefix\": \"async-events-\",\n      \"jwtSecret\": \"CHANGE-ME\",\n      \"jwtCookieName\": \"async-token\",\n    }\n  service:\n    type: ClusterIP\n    annotations: {}\n    loadBalancerIP: ~\n    port: 8080\n    nodePort:\n      # -- (int)\n      http: nil\n  command: []\n  resources: {}\n  # -- Launch additional containers into supersetWebsockets pods\n  extraContainers: []\n  deploymentAnnotations: {}\n  # -- Affinity to be added to supersetWebsockets deployment\n  affinity: {}\n  # -- TopologySpreadConstrains to be added to supersetWebsockets deployments\n  topologySpreadConstraints: []\n  podAnnotations: {}\n  podLabels: {}\n  strategy: {}\n  podSecurityContext: {}\n  containerSecurityContext: {}\n  startupProbe:\n    httpGet:\n      path: /health\n      port: ws\n    initialDelaySeconds: 5\n    timeoutSeconds: 1\n    failureThreshold: 60\n    periodSeconds: 5\n    successThreshold: 1\n  livenessProbe:\n    httpGet:\n      path: /health\n      port: ws\n    initialDelaySeconds: 5\n    timeoutSeconds: 1\n    failureThreshold: 3\n    periodSeconds: 5\n    successThreshold: 1\n  readinessProbe:\n    httpGet:\n      path: /health\n      port: ws\n    initialDelaySeconds: 5\n    timeoutSeconds: 1\n    failureThreshold: 3\n    periodSeconds: 5\n    successThreshold: 1\n\ninit:\n  # Configure resources\n  # Warning: fab command consumes a lot of ram and can\n  # cause the process to be killed due to OOM if it exceeds limit\n  # Make sure you are giving a strong password for the admin user creation( else make sure you are changing after setup)\n  # Also change the admin email to your own custom email.\n  resources: {}\n    # limits:\n    #   cpu:\n    #   memory:\n    # requests:\n    #   cpu:\n    #   memory:\n  # -- Command\n  # @default -- a `superset_init.sh` command\n  command:\n    - \"/bin/sh\"\n    - \"-c\"\n    - \". {{ .Values.configMountPath }}/superset_bootstrap.sh; . {{ .Values.configMountPath }}/superset_init.sh\"\n  enabled: true\n  jobAnnotations:\n    \"helm.sh/hook\": post-install,post-upgrade\n    \"helm.sh/hook-delete-policy\": \"before-hook-creation\"\n  loadExamples: false\n  createAdmin: true\n  adminUser:\n    username: admin\n    firstname: Superset\n    lastname: Admin\n    email: admin@superset.com\n    password: admin\n  # -- List of initContainers\n  # @default -- a container waiting for postgres\n  initContainers:\n    - name: wait-for-postgres\n      image: \"{{ .Values.initImage.repository }}:{{ .Values.initImage.tag }}\"\n      imagePullPolicy: \"{{ .Values.initImage.pullPolicy }}\"\n      envFrom:\n        - secretRef:\n            name: \"{{ tpl .Values.envFromSecret . }}\"\n      command:\n        - /bin/sh\n        - -c\n        - dockerize -wait \"tcp://$DB_HOST:$DB_PORT\" -timeout 120s\n  # -- A Superset init script\n  # @default -- a script to create admin user and initialize roles\n  initscript: |-\n    #!/bin/sh\n    set -eu\n    echo \"Upgrading DB schema...\"\n    superset db upgrade\n    echo \"Initializing roles...\"\n    superset init\n    {{ if .Values.init.createAdmin }}\n    echo \"Creating admin user...\"\n    superset fab create-admin \\\n                    --username {{ .Values.init.adminUser.username }} \\\n                    --firstname {{ .Values.init.adminUser.firstname }} \\\n                    --lastname {{ .Values.init.adminUser.lastname }} \\\n                    --email {{ .Values.init.adminUser.email }} \\\n                    --password {{ .Values.init.adminUser.password }} \\\n                    || true\n    {{- end }}\n    {{ if .Values.init.loadExamples }}\n    echo \"Loading examples...\"\n    superset load_examples\n    {{- end }}\n    if [ -f \"{{ .Values.extraConfigMountPath }}/import_datasources.yaml\" ]; then\n      echo \"Importing database connections.... \"\n      superset import_datasources -p {{ .Values.extraConfigMountPath }}/import_datasources.yaml\n    fi\n  # -- Launch additional containers into init job pod\n  extraContainers: []\n  ## Annotations to be added to init job pods\n  podAnnotations: {}\n  podSecurityContext: {}\n  containerSecurityContext: {}\n  ## Tolerations to be added to init job pods\n  tolerations: []\n  ## Affinity to be added to init job pods\n  affinity: {}\n  # -- TopologySpreadConstrains to be added to init job\n  topologySpreadConstraints: []\n\n# -- Configuration values for the postgresql dependency.\n# ref: https://github.com/bitnami/charts/tree/main/bitnami/postgresql\n# @default -- see `values.yaml`\npostgresql:\n  ##\n  ## Use the PostgreSQL chart dependency.\n  ## Set to false if bringing your own PostgreSQL.\n  enabled: true\n\n  ## Authentication parameters\n  auth:\n    ## The name of an existing secret that contains the postgres password.\n    existingSecret:\n    ## PostgreSQL name for a custom user to create\n    username: superset\n    ## PostgreSQL password for the custom user to create. Ignored if `auth.existingSecret` with key `password` is provided\n    password: superset\n    ## PostgreSQL name for a custom database to create\n    database: superset\n\n  image:\n    tag: \"14.6.0-debian-11-r13\"\n\n  ## PostgreSQL Primary parameters\n  primary:\n    ##\n    ## Persistent Volume Storage configuration.\n    ## ref: https://kubernetes.io/docs/user-guide/persistent-volumes\n    persistence:\n      ##\n      ## Enable PostgreSQL persistence using Persistent Volume Claims.\n      enabled: true\n      ##\n      ## Persistent class\n      storageClass: gp2\n      ##\n      ## Access modes:\n      accessModes:\n        - ReadWriteOnce\n    ## PostgreSQL port\n    service:\n      ports:\n        postgresql: \"5432\"\n\n# -- Configuration values for the Redis dependency.\n# ref: https://github.com/bitnami/charts/blob/master/bitnami/redis\n# More documentation can be found here: https://artifacthub.io/packages/helm/bitnami/redis\n# @default -- see `values.yaml`\nredis:\n  ##\n  ## Use the redis chart dependency.\n  ##\n  ## If you are bringing your own redis, you can set the host in supersetNode.connections.redis_host\n  ##\n  ## Set to false if bringing your own redis.\n  enabled: true\n  ##\n  ## Set architecture to standalone/replication\n  architecture: standalone\n  ##\n  ## Auth configuration:\n  ##\n  auth:\n    ## Enable password authentication\n    enabled: false\n    ## The name of an existing secret that contains the redis password.\n    existingSecret: \"\"\n    ## Name of the key containing the secret.\n    existingSecretKey: \"\"\n    ## Redis password\n    password: superset\n  ##\n  ## Master configuration\n  ##\n  master:\n    ##\n    ## Image configuration\n    # image:\n    ##\n    ## docker registry secret names (list)\n    # pullSecrets: nil\n    ##\n    ## Configure persistance\n    persistence:\n      ##\n      ## Use a PVC to persist data.\n      enabled: false\n      ##\n      ## Persistent class\n      # storageClass: classname\n      ##\n      ## Access mode:\n      accessModes:\n        - ReadWriteOnce\n\nnodeSelector: {}\n\ntolerations: []\n\naffinity: {}\n\n# -- TopologySpreadConstrains to be added to all deployments\ntopologySpreadConstraints: []\n"
            ],
            "verify": false,
            "version": "0.10.9",
            "wait": true
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_eks_addon.addons",
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "module.ebs-csi-driver-role.aws_iam_role.this",
            "module.ebs-csi-driver-role.data.aws_caller_identity.current",
            "module.ebs-csi-driver-role.data.aws_iam_policy_document.this",
            "module.ebs-csi-driver-role.data.aws_partition.current",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.superset_namespace.kubernetes_namespace.namespace",
            "module.superset_namespace.module.namespace_roles.kubernetes_role.rbac_helm_metadata_access",
            "module.superset_namespace.module.namespace_roles.kubernetes_role.rbac_helm_resource_access",
            "module.superset_namespace.module.namespace_roles.kubernetes_role.rbac_role_access_all",
            "module.superset_namespace.module.namespace_roles.kubernetes_role.rbac_role_access_read_only",
            "module.superset_namespace.module.namespace_roles.null_resource.dependency_getter",
            "module.superset_namespace.null_resource.dependency_getter",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_service_account",
      "name": "service-account",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "automount_service_account_token": true,
            "default_secret_name": "",
            "id": "kube-system/aws-load-balancer-controller",
            "image_pull_secret": [],
            "metadata": [
              {
                "annotations": {
                  "eks.amazonaws.com/role-arn": "arn:aws:iam::618214806620:role/superset_eks_lb",
                  "eks.amazonaws.com/sts-regional-endpoints": "true"
                },
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/component": "controller",
                  "app.kubernetes.io/name": "aws-load-balancer-controller"
                },
                "name": "aws-load-balancer-controller",
                "namespace": "kube-system",
                "resource_version": "209879",
                "uid": "ca2aa903-fd2e-4d7d-92dc-fe24fc2b6bad"
              }
            ],
            "secret": [],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.lb_role.aws_iam_role.this",
            "module.lb_role.data.aws_caller_identity.current",
            "module.lb_role.data.aws_iam_policy_document.this",
            "module.lb_role.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.ebs-csi-driver-role",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "618214806620",
            "arn": "arn:aws:iam::618214806620:root",
            "id": "618214806620",
            "user_id": "618214806620"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.ebs-csi-driver-role",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "ebs_csi",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "932695789",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:ModifyVolume\",\n        \"ec2:DetachVolume\",\n        \"ec2:DescribeVolumesModifications\",\n        \"ec2:DescribeVolumes\",\n        \"ec2:DescribeTags\",\n        \"ec2:DescribeSnapshots\",\n        \"ec2:DescribeInstances\",\n        \"ec2:DescribeAvailabilityZones\",\n        \"ec2:CreateSnapshot\",\n        \"ec2:AttachVolume\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:CreateTags\",\n      \"Resource\": [\n        \"arn:aws:ec2:*:*:volume/*\",\n        \"arn:aws:ec2:*:*:snapshot/*\"\n      ],\n      \"Condition\": {\n        \"StringEquals\": {\n          \"ec2:CreateAction\": [\n            \"CreateVolume\",\n            \"CreateSnapshot\"\n          ]\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:DeleteTags\",\n      \"Resource\": [\n        \"arn:aws:ec2:*:*:volume/*\",\n        \"arn:aws:ec2:*:*:snapshot/*\"\n      ]\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:CreateVolume\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"aws:RequestTag/ebs.csi.aws.com/cluster\": \"true\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:CreateVolume\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"aws:RequestTag/CSIVolumeName\": \"*\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:CreateVolume\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"aws:RequestTag/kubernetes.io/cluster/*\": \"owned\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:DeleteVolume\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"ec2:ResourceTag/ebs.csi.aws.com/cluster\": \"true\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:DeleteVolume\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"ec2:ResourceTag/CSIVolumeName\": \"*\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:DeleteVolume\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"ec2:ResourceTag/kubernetes.io/cluster/*\": \"owned\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:DeleteVolume\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"ec2:ResourceTag/kubernetes.io/created-for/pvc/name\": \"*\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:DeleteSnapshot\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"ec2:ResourceTag/CSIVolumeSnapshotName\": \"*\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:DeleteSnapshot\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"ec2:ResourceTag/ebs.csi.aws.com/cluster\": \"true\"\n        }\n      }\n    }\n  ]\n}",
            "override_policy_documents": null,
            "policy_id": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "ec2:AttachVolume",
                  "ec2:CreateSnapshot",
                  "ec2:DescribeAvailabilityZones",
                  "ec2:DescribeInstances",
                  "ec2:DescribeSnapshots",
                  "ec2:DescribeTags",
                  "ec2:DescribeVolumes",
                  "ec2:DescribeVolumesModifications",
                  "ec2:DetachVolume",
                  "ec2:ModifyVolume"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:CreateTags"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "CreateVolume",
                      "CreateSnapshot"
                    ],
                    "variable": "ec2:CreateAction"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:ec2:*:*:snapshot/*",
                  "arn:aws:ec2:*:*:volume/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:DeleteTags"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:ec2:*:*:snapshot/*",
                  "arn:aws:ec2:*:*:volume/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:CreateVolume"
                ],
                "condition": [
                  {
                    "test": "StringLike",
                    "values": [
                      "true"
                    ],
                    "variable": "aws:RequestTag/ebs.csi.aws.com/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:CreateVolume"
                ],
                "condition": [
                  {
                    "test": "StringLike",
                    "values": [
                      "*"
                    ],
                    "variable": "aws:RequestTag/CSIVolumeName"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:CreateVolume"
                ],
                "condition": [
                  {
                    "test": "StringLike",
                    "values": [
                      "owned"
                    ],
                    "variable": "aws:RequestTag/kubernetes.io/cluster/*"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:DeleteVolume"
                ],
                "condition": [
                  {
                    "test": "StringLike",
                    "values": [
                      "true"
                    ],
                    "variable": "ec2:ResourceTag/ebs.csi.aws.com/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:DeleteVolume"
                ],
                "condition": [
                  {
                    "test": "StringLike",
                    "values": [
                      "*"
                    ],
                    "variable": "ec2:ResourceTag/CSIVolumeName"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:DeleteVolume"
                ],
                "condition": [
                  {
                    "test": "StringLike",
                    "values": [
                      "owned"
                    ],
                    "variable": "ec2:ResourceTag/kubernetes.io/cluster/*"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:DeleteVolume"
                ],
                "condition": [
                  {
                    "test": "StringLike",
                    "values": [
                      "*"
                    ],
                    "variable": "ec2:ResourceTag/kubernetes.io/created-for/pvc/name"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:DeleteSnapshot"
                ],
                "condition": [
                  {
                    "test": "StringLike",
                    "values": [
                      "*"
                    ],
                    "variable": "ec2:ResourceTag/CSIVolumeSnapshotName"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:DeleteSnapshot"
                ],
                "condition": [
                  {
                    "test": "StringLike",
                    "values": [
                      "true"
                    ],
                    "variable": "ec2:ResourceTag/ebs.csi.aws.com/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.ebs-csi-driver-role",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "3573835228",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"ExplicitSelfRoleAssumption\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"AWS\": \"*\"\n      },\n      \"Condition\": {\n        \"ArnLike\": {\n          \"aws:PrincipalArn\": \"arn:aws:iam::618214806620:role/ebs_csi_driver\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n      \"Principal\": {\n        \"Federated\": \"arn:aws:iam::618214806620:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/183AC2354170D59D406D00C505D3956B\"\n      },\n      \"Condition\": {\n        \"StringEquals\": {\n          \"oidc.eks.us-west-2.amazonaws.com/id/183AC2354170D59D406D00C505D3956B:aud\": \"sts.amazonaws.com\",\n          \"oidc.eks.us-west-2.amazonaws.com/id/183AC2354170D59D406D00C505D3956B:sub\": \"system:serviceaccount:kube-system:ebs-csi-controller-sa\"\n        }\n      }\n    }\n  ]\n}",
            "override_policy_documents": null,
            "policy_id": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [
                  {
                    "test": "ArnLike",
                    "values": [
                      "arn:aws:iam::618214806620:role/ebs_csi_driver"
                    ],
                    "variable": "aws:PrincipalArn"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "*"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [],
                "sid": "ExplicitSelfRoleAssumption"
              },
              {
                "actions": [
                  "sts:AssumeRoleWithWebIdentity"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "sts.amazonaws.com"
                    ],
                    "variable": "oidc.eks.us-west-2.amazonaws.com/id/183AC2354170D59D406D00C505D3956B:aud"
                  },
                  {
                    "test": "StringEquals",
                    "values": [
                      "system:serviceaccount:kube-system:ebs-csi-controller-sa"
                    ],
                    "variable": "oidc.eks.us-west-2.amazonaws.com/id/183AC2354170D59D406D00C505D3956B:sub"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::618214806620:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/183AC2354170D59D406D00C505D3956B"
                    ],
                    "type": "Federated"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.ebs-csi-driver-role",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.ebs-csi-driver-role",
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "description": "US West (Oregon)",
            "endpoint": "ec2.us-west-2.amazonaws.com",
            "id": "us-west-2",
            "name": "us-west-2"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.ebs-csi-driver-role",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "ebs_csi",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::618214806620:policy/AmazonEKS_EBS_CSI_Policy-20240114193950156400000001",
            "description": "Provides permissions to manage EBS volumes via the container storage interface driver",
            "id": "arn:aws:iam::618214806620:policy/AmazonEKS_EBS_CSI_Policy-20240114193950156400000001",
            "name": "AmazonEKS_EBS_CSI_Policy-20240114193950156400000001",
            "name_prefix": "AmazonEKS_EBS_CSI_Policy-",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"ec2:ModifyVolume\",\"ec2:DetachVolume\",\"ec2:DescribeVolumesModifications\",\"ec2:DescribeVolumes\",\"ec2:DescribeTags\",\"ec2:DescribeSnapshots\",\"ec2:DescribeInstances\",\"ec2:DescribeAvailabilityZones\",\"ec2:CreateSnapshot\",\"ec2:AttachVolume\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"ec2:CreateTags\",\"Condition\":{\"StringEquals\":{\"ec2:CreateAction\":[\"CreateVolume\",\"CreateSnapshot\"]}},\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:ec2:*:*:volume/*\",\"arn:aws:ec2:*:*:snapshot/*\"]},{\"Action\":\"ec2:DeleteTags\",\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:ec2:*:*:volume/*\",\"arn:aws:ec2:*:*:snapshot/*\"]},{\"Action\":\"ec2:CreateVolume\",\"Condition\":{\"StringLike\":{\"aws:RequestTag/ebs.csi.aws.com/cluster\":\"true\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"ec2:CreateVolume\",\"Condition\":{\"StringLike\":{\"aws:RequestTag/CSIVolumeName\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"ec2:CreateVolume\",\"Condition\":{\"StringLike\":{\"aws:RequestTag/kubernetes.io/cluster/*\":\"owned\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"ec2:DeleteVolume\",\"Condition\":{\"StringLike\":{\"ec2:ResourceTag/ebs.csi.aws.com/cluster\":\"true\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"ec2:DeleteVolume\",\"Condition\":{\"StringLike\":{\"ec2:ResourceTag/CSIVolumeName\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"ec2:DeleteVolume\",\"Condition\":{\"StringLike\":{\"ec2:ResourceTag/kubernetes.io/cluster/*\":\"owned\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"ec2:DeleteVolume\",\"Condition\":{\"StringLike\":{\"ec2:ResourceTag/kubernetes.io/created-for/pvc/name\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"ec2:DeleteSnapshot\",\"Condition\":{\"StringLike\":{\"ec2:ResourceTag/CSIVolumeSnapshotName\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"ec2:DeleteSnapshot\",\"Condition\":{\"StringLike\":{\"ec2:ResourceTag/ebs.csi.aws.com/cluster\":\"true\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPAY74DZKROJQV5QDEJO",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.ebs-csi-driver-role.data.aws_iam_policy_document.ebs_csi",
            "module.ebs-csi-driver-role.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.ebs-csi-driver-role",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::618214806620:role/ebs_csi_driver",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Condition\":{\"ArnLike\":{\"aws:PrincipalArn\":\"arn:aws:iam::618214806620:role/ebs_csi_driver\"}},\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Sid\":\"ExplicitSelfRoleAssumption\"},{\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.us-west-2.amazonaws.com/id/183AC2354170D59D406D00C505D3956B:aud\":\"sts.amazonaws.com\",\"oidc.eks.us-west-2.amazonaws.com/id/183AC2354170D59D406D00C505D3956B:sub\":\"system:serviceaccount:kube-system:ebs-csi-controller-sa\"}},\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::618214806620:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/183AC2354170D59D406D00C505D3956B\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-01-14T20:13:17Z",
            "description": "",
            "force_detach_policies": true,
            "id": "ebs_csi_driver",
            "inline_policy": [],
            "managed_policy_arns": [
              "arn:aws:iam::618214806620:policy/AmazonEKS_EBS_CSI_Policy-20240114193950156400000001"
            ],
            "max_session_duration": 3600,
            "name": "ebs_csi_driver",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": "",
            "tags": {},
            "tags_all": {},
            "unique_id": "AROAY74DZKRONBIELKWJO"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.ebs-csi-driver-role.data.aws_caller_identity.current",
            "module.ebs-csi-driver-role.data.aws_iam_policy_document.this",
            "module.ebs-csi-driver-role.data.aws_partition.current",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.ebs-csi-driver-role",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "ebs_csi",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "ebs_csi_driver-20240114201317941100000003",
            "policy_arn": "arn:aws:iam::618214806620:policy/AmazonEKS_EBS_CSI_Policy-20240114193950156400000001",
            "role": "ebs_csi_driver"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.ebs-csi-driver-role.aws_iam_policy.ebs_csi",
            "module.ebs-csi-driver-role.aws_iam_role.this",
            "module.ebs-csi-driver-role.data.aws_caller_identity.current",
            "module.ebs-csi-driver-role.data.aws_iam_policy_document.ebs_csi",
            "module.ebs-csi-driver-role.data.aws_iam_policy_document.this",
            "module.ebs-csi-driver-role.data.aws_partition.current",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "618214806620",
            "arn": "arn:aws:iam::618214806620:root",
            "id": "618214806620",
            "user_id": "618214806620"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2764486067",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSClusterAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_policy_documents": null,
            "policy_id": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "eks.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSClusterAssumeRole"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_iam_session_context",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::618214806620:root",
            "id": "arn:aws:iam::618214806620:root",
            "issuer_arn": "arn:aws:iam::618214806620:root",
            "issuer_id": "",
            "issuer_name": "",
            "session_name": ""
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "tls_certificate",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "certificates": [
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEdTCCA12gAwIBAgIJAKcOSkw0grd/MA0GCSqGSIb3DQEBCwUAMGgxCzAJBgNV\nBAYTAlVTMSUwIwYDVQQKExxTdGFyZmllbGQgVGVjaG5vbG9naWVzLCBJbmMuMTIw\nMAYDVQQLEylTdGFyZmllbGQgQ2xhc3MgMiBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0\neTAeFw0wOTA5MDIwMDAwMDBaFw0zNDA2MjgxNzM5MTZaMIGYMQswCQYDVQQGEwJV\nUzEQMA4GA1UECBMHQXJpem9uYTETMBEGA1UEBxMKU2NvdHRzZGFsZTElMCMGA1UE\nChMcU3RhcmZpZWxkIFRlY2hub2xvZ2llcywgSW5jLjE7MDkGA1UEAxMyU3RhcmZp\nZWxkIFNlcnZpY2VzIFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IC0gRzIwggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDVDDrEKvlO4vW+GZdfjohTsR8/\ny8+fIBNtKTrID30892t2OGPZNmCom15cAICyL1l/9of5JUOG52kbUpqQ4XHj2C0N\nTm/2yEnZtvMaVq4rtnQU68/7JuMauh2WLmo7WJSJR1b/JaCTcFOD2oR0FMNnngRo\nOt+OQFodSk7PQ5E751bWAHDLUu57fa4657wx+UX2wmDPE1kCK4DMNEffud6QZW0C\nzyyRpqbn3oUYSXxmTqM6bam17jQuug0DuDPfR+uxa40l2ZvOgdFFRjKWcIfeAg5J\nQ4W2bHO7ZOphQazJ1FTfhy/HIrImzJ9ZVGif/L4qL8RVHHVAYBeFAlU5i38FAgMB\nAAGjgfAwge0wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwHQYDVR0O\nBBYEFJxfAN+qAdcwKziIorhtSpzyEZGDMB8GA1UdIwQYMBaAFL9ft9HO3R+G9FtV\nrNzXEMIOqYjnME8GCCsGAQUFBwEBBEMwQTAcBggrBgEFBQcwAYYQaHR0cDovL28u\nc3MyLnVzLzAhBggrBgEFBQcwAoYVaHR0cDovL3guc3MyLnVzL3guY2VyMCYGA1Ud\nHwQfMB0wG6AZoBeGFWh0dHA6Ly9zLnNzMi51cy9yLmNybDARBgNVHSAECjAIMAYG\nBFUdIAAwDQYJKoZIhvcNAQELBQADggEBACMd44pXyn3pF3lM8R5V/cxTbj5HD9/G\nVfKyBDbtgB9TxF00KGu+x1X8Z+rLP3+QsjPNG1gQggL4+C/1E2DUBc7xgQjB3ad1\nl08YuW3e95ORCLp+QCztweq7dp4zBncdDQh/U90bZKuCJ/Fp1U1ervShw3WnWEQt\n8jxwmKy6abaVd38PMV4s/KCHOkdp8Hlf9BRUpJVeEXgSYCfOn8J3/yNTd126/+pZ\n59vPr5KW7ySaNRB6nJHGDn2Z9j8Z3/VyVOEVqQdZe4O/Ui5GjLIAZHYcSNPYeehu\nVsyuLAOQ1xk4meTKCRlb/weWsKh/NEnfVqn3sF/tM+2MR7cwA130A4w=\n-----END CERTIFICATE-----\n",
                "is_ca": true,
                "issuer": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "not_after": "2034-06-28T17:39:16Z",
                "not_before": "2009-09-02T00:00:00Z",
                "public_key_algorithm": "RSA",
                "serial_number": "12037640545166866303",
                "sha1_fingerprint": "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "version": 3
              },
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEkjCCA3qgAwIBAgITBn+USionzfP6wq4rAfkI7rnExjANBgkqhkiG9w0BAQsF\nADCBmDELMAkGA1UEBhMCVVMxEDAOBgNVBAgTB0FyaXpvbmExEzARBgNVBAcTClNj\nb3R0c2RhbGUxJTAjBgNVBAoTHFN0YXJmaWVsZCBUZWNobm9sb2dpZXMsIEluYy4x\nOzA5BgNVBAMTMlN0YXJmaWVsZCBTZXJ2aWNlcyBSb290IENlcnRpZmljYXRlIEF1\ndGhvcml0eSAtIEcyMB4XDTE1MDUyNTEyMDAwMFoXDTM3MTIzMTAxMDAwMFowOTEL\nMAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEZMBcGA1UEAxMQQW1hem9uIFJv\nb3QgQ0EgMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALJ4gHHKeNXj\nca9HgFB0fW7Y14h29Jlo91ghYPl0hAEvrAIthtOgQ3pOsqTQNroBvo3bSMgHFzZM\n9O6II8c+6zf1tRn4SWiw3te5djgdYZ6k/oI2peVKVuRF4fn9tBb6dNqcmzU5L/qw\nIFAGbHrQgLKm+a/sRxmPUDgH3KKHOVj4utWp+UhnMJbulHheb4mjUcAwhmahRWa6\nVOujw5H5SNz/0egwLX0tdHA114gk957EWW67c4cX8jJGKLhD+rcdqsq08p8kDi1L\n93FcXmn/6pUCyziKrlA4b9v7LWIbxcceVOF34GfID5yHI9Y/QCB/IIDEgEw+OyQm\njgSubJrIqg0CAwEAAaOCATEwggEtMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/\nBAQDAgGGMB0GA1UdDgQWBBSEGMyFNOy8DJSULghZnMeyEE4KCDAfBgNVHSMEGDAW\ngBScXwDfqgHXMCs4iKK4bUqc8hGRgzB4BggrBgEFBQcBAQRsMGowLgYIKwYBBQUH\nMAGGImh0dHA6Ly9vY3NwLnJvb3RnMi5hbWF6b250cnVzdC5jb20wOAYIKwYBBQUH\nMAKGLGh0dHA6Ly9jcnQucm9vdGcyLmFtYXpvbnRydXN0LmNvbS9yb290ZzIuY2Vy\nMD0GA1UdHwQ2MDQwMqAwoC6GLGh0dHA6Ly9jcmwucm9vdGcyLmFtYXpvbnRydXN0\nLmNvbS9yb290ZzIuY3JsMBEGA1UdIAQKMAgwBgYEVR0gADANBgkqhkiG9w0BAQsF\nAAOCAQEAYjdCXLwQtT6LLOkMm2xF4gcAevnFWAu5CIw+7bMlPLVvUOTNNWqnkzSW\nMiGpSESrnO09tKpzbeR/FoCJbM8oAxiDR3mjEH4wW6w7sGDgd9QIpuEdfF7Au/ma\neyKdpwAJfqxGF4PcnCZXmTA5YpaP7dreqsXMGz7KQ2hsVxa81Q4gLv7/wmpdLqBK\nbRRYh5TmOTFffHPLkIhqhBGWJ6bt2YFGpn6jcgAKUj6DiAdjd4lpFw85hdKrCEVN\n0FE6/V1dN2RMfjCyVSRCnTawXZwXgWHxyvkQAiSr6w10kY17RSlQOYiypok1JR4U\nakcjMS9cmvqtmg5iUaQqqcT5NJ0hGA==\n-----END CERTIFICATE-----\n",
                "is_ca": true,
                "issuer": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "not_after": "2037-12-31T01:00:00Z",
                "not_before": "2015-05-25T12:00:00Z",
                "public_key_algorithm": "RSA",
                "serial_number": "144918191876577076464031512351042010504348870",
                "sha1_fingerprint": "06b25927c42a721631c1efd9431e648fa62e1e39",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "version": 3
              },
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEXjCCA0agAwIBAgITB3MSOAudZoijOx7Zv5zNpo4ODzANBgkqhkiG9w0BAQsF\nADA5MQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRkwFwYDVQQDExBBbWF6\nb24gUm9vdCBDQSAxMB4XDTIyMDgyMzIyMjEyOFoXDTMwMDgyMzIyMjEyOFowPDEL\nMAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEcMBoGA1UEAxMTQW1hem9uIFJT\nQSAyMDQ4IE0wMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOtxLKnL\nH4gokjIwr4pXD3i3NyWVVYesZ1yX0yLI2qIUZ2t88Gfa4gMqs1YSXca1R/lnCKeT\nepWSGA+0+fkQNpp/L4C2T7oTTsddUx7g3ZYzByDTlrwS5HRQQqEFE3O1T5tEJP4t\nf+28IoXsNiEzl3UGzicYgtzj2cWCB41eJgEmJmcf2T8TzzK6a614ZPyq/w4CPAff\nnAV4coz96nW3AyiE2uhuB4zQUIXvgVSycW7sbWLvj5TDXunEpNCRwC4kkZjK7rol\njtT2cbb7W2s4Bkg3R42G3PLqBvt2N32e/0JOTViCk8/iccJ4sXqrS1uUN4iB5Nmv\nJK74csVl+0u0UecCAwEAAaOCAVowggFWMBIGA1UdEwEB/wQIMAYBAf8CAQAwDgYD\nVR0PAQH/BAQDAgGGMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNV\nHQ4EFgQUgbgOY4qJEhjl+js7UJWf5uWQE4UwHwYDVR0jBBgwFoAUhBjMhTTsvAyU\nlC4IWZzHshBOCggwewYIKwYBBQUHAQEEbzBtMC8GCCsGAQUFBzABhiNodHRwOi8v\nb2NzcC5yb290Y2ExLmFtYXpvbnRydXN0LmNvbTA6BggrBgEFBQcwAoYuaHR0cDov\nL2NydC5yb290Y2ExLmFtYXpvbnRydXN0LmNvbS9yb290Y2ExLmNlcjA/BgNVHR8E\nODA2MDSgMqAwhi5odHRwOi8vY3JsLnJvb3RjYTEuYW1hem9udHJ1c3QuY29tL3Jv\nb3RjYTEuY3JsMBMGA1UdIAQMMAowCAYGZ4EMAQIBMA0GCSqGSIb3DQEBCwUAA4IB\nAQCtAN4CBSMuBjJitGuxlBbkEUDeK/pZwTXv4KqPK0G50fOHOQAd8j21p0cMBgbG\nkfMHVwLU7b0XwZCav0h1ogdPMN1KakK1DT0VwA/+hFvGPJnMV1Kx2G4S1ZaSk0uU\n5QfoiYIIano01J5k4T2HapKQmmOhS/iPtuo00wW+IMLeBuKMn3OLn005hcrOGTad\nhcmeyfhQP7Z+iKHvyoQGi1C0ClymHETx/chhQGDyYSWqB/THwnN15AwLQo0E5V9E\nSJlbe4mBlqeInUsNYugExNf+tOiybcrswBy8OFsd34XOW3rjSUtsuafd9AWySa3h\nxRRrwszrzX/WWGm6wyB+f7C4\n-----END CERTIFICATE-----\n",
                "is_ca": true,
                "issuer": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "not_after": "2030-08-23T22:21:28Z",
                "not_before": "2022-08-23T22:21:28Z",
                "public_key_algorithm": "RSA",
                "serial_number": "166129328851546858514271303855646110030630415",
                "sha1_fingerprint": "2ad974a775f73cbdbbd8f5ac3a49255fa8fb1f8c",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=Amazon RSA 2048 M01,O=Amazon,C=US",
                "version": 3
              },
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIF7TCCBNWgAwIBAgIQDAMZajMylZveIhA3JfaDkzANBgkqhkiG9w0BAQsFADA8\nMQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRwwGgYDVQQDExNBbWF6b24g\nUlNBIDIwNDggTTAxMB4XDTIzMDQxMzAwMDAwMFoXDTI0MDUxMTIzNTk1OVowKzEp\nMCcGA1UEAxMgb2lkYy5la3MudXMtd2VzdC0yLmFtYXpvbmF3cy5jb20wggEiMA0G\nCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCPZcUrPoakGvhWyoBhbOpCizY18tRP\nck5uA2m0p4CqnFVP0qU8whlmtAALUGkpMBg11VmEjRqW09l36Mg+1IzP1VHQTTc4\nJJa9jCibHsYRNyIdh3d4CoW1tV+5TQFZ7dcuK3a5XMPRVe+LdeBB+UjHky/kvgkZ\nwQAC0EGp4jztSxEiaiLH7hDhEugUR6yJNgD29Qd1LnovJ6zs8nUd719Dh5x/etWJ\n3z04TKzhriTz+9FEE4Xrl2k0qZxQsKGRtsqE+Ra9ZpytFNCVSL8EK2zlb97umWwJ\nyhG/fdvKfOuMX7qUAuWzgaaPlkQDibDQjY6OTfFbfKMDDVTFtQEbUQD9AgMBAAGj\nggL6MIIC9jAfBgNVHSMEGDAWgBSBuA5jiokSGOX6OztQlZ/m5ZAThTAdBgNVHQ4E\nFgQUnBmr23OxmnGzVwNOzSVgMw1pQcAwKwYDVR0RBCQwIoIgb2lkYy5la3MudXMt\nd2VzdC0yLmFtYXpvbmF3cy5jb20wDgYDVR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQG\nCCsGAQUFBwMBBggrBgEFBQcDAjA7BgNVHR8ENDAyMDCgLqAshipodHRwOi8vY3Js\nLnIybTAxLmFtYXpvbnRydXN0LmNvbS9yMm0wMS5jcmwwEwYDVR0gBAwwCjAIBgZn\ngQwBAgEwdQYIKwYBBQUHAQEEaTBnMC0GCCsGAQUFBzABhiFodHRwOi8vb2NzcC5y\nMm0wMS5hbWF6b250cnVzdC5jb20wNgYIKwYBBQUHMAKGKmh0dHA6Ly9jcnQucjJt\nMDEuYW1hem9udHJ1c3QuY29tL3IybTAxLmNlcjAMBgNVHRMBAf8EAjAAMIIBfwYK\nKwYBBAHWeQIEAgSCAW8EggFrAWkAdwDuzdBk1dsazsVct520zROiModGfLzs3sNR\nSFlGcR+1mwAAAYd4O9dqAAAEAwBIMEYCIQDO28u4eYZCvCNjZhMZSsB3Fu8VJImr\nv2a0i5AF9PbvWQIhANQcunFuOYph/lhOvSqw3+XlDR1ML8OJKtfL713/7n93AHYA\nSLDja9qmRzQP5WoC+p0w6xxSActW3SyB2bu/qznYhHMAAAGHeDvXmAAABAMARzBF\nAiEAr28QhaZMvCEmxdb9dVBYR4ov5aHr89pGPiGzAkix8AECIBMKc+QxtzcAJMHS\nDtAfbHwfbXbp4czqmiB5TTirm8FxAHYA2ra/az+1tiKfm8K7XGvocJFxbLtRhIU0\nvaQ9MEjX+6sAAAGHeDvXZQAABAMARzBFAiBoclNKW27c9oUdEGfcDF0v2c52pQQQ\nDkvL6wnA5xY5egIhANSogtAL30hmiOGf4yRIFTcIlt1rL855WMmgvhPD3HCUMA0G\nCSqGSIb3DQEBCwUAA4IBAQAvv031iNDVLeCL0kQ7VQDSuS9IzR9p8Vuccc08WBP6\n1Iqmiveq3k/wSwXhKxw4vaxvzpIXUaW/IEfRKXd+BuRtJmz+mfZmNvaB7CPp007+\nMbCblsrfvGBwHvORZy5jPRxHfoxto/FuJDvQVUfVB60gBjG602yAU6wipPmzNHTs\nOQ6+xp0t6e/P31czkpWvZWeEhBRexRkRaU5UoIY2+M07kGQePfdaJtqQbefHmDSc\nj2kx2HU3kCEiFjQr56+cPhzQNAjsRAR/9EIc0QHj1jdVTimMvYQ4nMa6VqsvmtWT\nm7oLVSrA4/8EhLS5SRwlGIYYjmv+pwkHydqYzEcKA0lz\n-----END CERTIFICATE-----\n",
                "is_ca": false,
                "issuer": "CN=Amazon RSA 2048 M01,O=Amazon,C=US",
                "not_after": "2024-05-11T23:59:59Z",
                "not_before": "2023-04-13T00:00:00Z",
                "public_key_algorithm": "RSA",
                "serial_number": "15966828314264801061238642629783487379",
                "sha1_fingerprint": "e1d31a1f94725daaef02dcf1c1bb0ff4a28a6060",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=oidc.eks.us-west-2.amazonaws.com",
                "version": 3
              }
            ],
            "content": null,
            "id": "34b882443ccd2d1a84de1dbac994b28b7f371f17",
            "url": "https://oidc.eks.us-west-2.amazonaws.com/id/183AC2354170D59D406D00C505D3956B",
            "verify_chain": true
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-west-2:618214806620:log-group:/aws/eks/superset-cluster/cluster",
            "id": "/aws/eks/superset-cluster/cluster",
            "kms_key_id": "",
            "log_group_class": "STANDARD",
            "name": "/aws/eks/superset-cluster/cluster",
            "name_prefix": "",
            "retention_in_days": 90,
            "skip_destroy": false,
            "tags": {
              "Name": "/aws/eks/superset-cluster/cluster"
            },
            "tags_all": {
              "Name": "/aws/eks/superset-cluster/cluster"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_eks_cluster",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:eks:us-west-2:618214806620:cluster/superset-cluster",
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJQmZGb2R1TEhIcDB3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRBeE1URXdOakV4TVRaYUZ3MHpOREF4TURnd05qRTJNVFphTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUMyc0Y2SElQQTl6dWJMSlUzYXV0RmdsZEtHbURPa3QyQW82QmxSejZuSGVqLzB5MmlrVlRWa25lcysKMmxVSm9VMnMvTVRiQVJjM3o4eUdFQ3BRcTA2cjgwdWUwSGlJdVN5TGZyUmNtTGhCeFJPVHdYNnlwYTdqcDlkawplME9Fb3dPV29CZHFVZEhVcjVDTzY5REsxMUpaSnF2UmxxTDhIb0VXd1JiNWJMbTNuQmJVcURKQjkxR01lTnBwCmVYWUZIUVlEOFRJUnA5alFNUktCR0dPU2NvVVA3YkVRMDNxa3NHcEJxYnZFSUY3MUJTM1ZnQ3prWDd2MS9hbGMKbm1Ed3RydEhYeHNjeHFPdmowL25yWEZEYzlEUjhETmFYUEZ3SEdXcElTNUxBWThiTW43Z3V6c0ErcGdMZ3JvdwphMUlrSHI5ZUNGVllOTElWTGpFVTAxRzd3ZTh6QWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSWUlNbFpQVDZrT2htdVEzZXRyYmZHbWw4YXNEQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQVJhSEFsV0tkNAppTmU5MEFNYUhwbVJOUmtDNnpSZ1RNdlpnRWhmVXYwL0tzeldsQ00vYjVjVUdDV0lhSk00ZlJXaXZPS3RCeERZCkxKUVBrUmVKOFpYa01JZmMrVGljL2p0LzBTYzNheFgxMFFTUE50U2MwaithWkNpclVsSHNIMnhZSU5rcWNHcFYKUi9vaVRWWi9CTTNBR2JHajVkT21NVDF2aTA1ZElsNkRkN1FyVXRQQWdZNTg1ZWlybGI1ZjBqTWZDOUtBbWRScAptZk11N2VlLzRNUmZxVGQ0UE1KVVlkM3R5RjNSR1pGNjlrOXJ0NG5iYmtSNHFoTlNKem5jbGp6Z3pSVFduNlY0Cms2Wng2TW4xUTJEaldtVU0rbUhrMEt3TkptVHV1M09JTzk1TjB3a0wyU29pUlRTZm91cmhJSUVWR2ZmQ3d0MUoKT1dUcENxOXAxL0ZLCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
              }
            ],
            "cluster_id": null,
            "created_at": "2024-01-11 06:10:56.378 +0000 UTC",
            "enabled_cluster_log_types": [
              "api",
              "audit",
              "authenticator"
            ],
            "encryption_config": [
              {
                "provider": [
                  {
                    "key_arn": "arn:aws:kms:us-west-2:618214806620:key/dc495982-c097-4f6a-93ee-566f93e32853"
                  }
                ],
                "resources": [
                  "secrets"
                ]
              }
            ],
            "endpoint": "https://183AC2354170D59D406D00C505D3956B.gr7.us-west-2.eks.amazonaws.com",
            "id": "superset-cluster",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.us-west-2.amazonaws.com/id/183AC2354170D59D406D00C505D3956B"
                  }
                ]
              }
            ],
            "kubernetes_network_config": [
              {
                "ip_family": "ipv4",
                "service_ipv4_cidr": "172.20.0.0/16",
                "service_ipv6_cidr": ""
              }
            ],
            "name": "superset-cluster",
            "outpost_config": [],
            "platform_version": "eks.10",
            "role_arn": "arn:aws:iam::618214806620:role/superset-cluster-cluster-20240111061033500600000003",
            "status": "ACTIVE",
            "tags": {},
            "tags_all": {},
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            },
            "version": "1.27",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-0d90be6bbc67b711b",
                "endpoint_private_access": true,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-0c7959dcb165d6c95"
                ],
                "subnet_ids": [
                  "subnet-0017f503328b03400",
                  "subnet-0b2f66184c5561ca2",
                  "subnet-0e3dd2ce96486af92"
                ],
                "vpc_id": "vpc-0eff67b7fceb0e080"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_openid_connect_provider",
      "name": "oidc_provider",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::618214806620:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/183AC2354170D59D406D00C505D3956B",
            "client_id_list": [
              "sts.amazonaws.com"
            ],
            "id": "arn:aws:iam::618214806620:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/183AC2354170D59D406D00C505D3956B",
            "tags": {
              "Name": "superset-cluster-eks-irsa"
            },
            "tags_all": {
              "Name": "superset-cluster-eks-irsa"
            },
            "thumbprint_list": [
              "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
            ],
            "url": "oidc.eks.us-west-2.amazonaws.com/id/183AC2354170D59D406D00C505D3956B"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "cluster_encryption",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::618214806620:policy/superset-cluster-cluster-ClusterEncryption2024011106105174740000000f",
            "description": "Cluster encryption policy to allow cluster role to utilize CMK provided",
            "id": "arn:aws:iam::618214806620:policy/superset-cluster-cluster-ClusterEncryption2024011106105174740000000f",
            "name": "superset-cluster-cluster-ClusterEncryption2024011106105174740000000f",
            "name_prefix": "superset-cluster-cluster-ClusterEncryption",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"kms:Encrypt\",\"kms:Decrypt\",\"kms:ListGrants\",\"kms:DescribeKey\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:kms:us-west-2:618214806620:key/dc495982-c097-4f6a-93ee-566f93e32853\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPAY74DZKROCEE2FSKR3",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::618214806620:role/superset-cluster-cluster-20240111061033500600000003",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Sid\":\"EKSClusterAssumeRole\"}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-01-11T06:10:33Z",
            "description": "",
            "force_detach_policies": true,
            "id": "superset-cluster-cluster-20240111061033500600000003",
            "inline_policy": [
              {
                "name": "superset-cluster-cluster",
                "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:CreateLogGroup\"],\"Effect\":\"Deny\",\"Resource\":\"*\"}]}"
              }
            ],
            "managed_policy_arns": [
              "arn:aws:iam::618214806620:policy/superset-cluster-cluster-ClusterEncryption2024011106105174740000000f",
              "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
              "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
            ],
            "max_session_duration": 3600,
            "name": "superset-cluster-cluster-20240111061033500600000003",
            "name_prefix": "superset-cluster-cluster-",
            "path": "/",
            "permissions_boundary": "",
            "tags": {},
            "tags_all": {},
            "unique_id": "AROAY74DZKRON56BXF3WV"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_partition.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_encryption",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "superset-cluster-cluster-20240111061033500600000003-20240111061052263400000010",
            "policy_arn": "arn:aws:iam::618214806620:policy/superset-cluster-cluster-ClusterEncryption2024011106105174740000000f",
            "role": "superset-cluster-cluster-20240111061033500600000003"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "AmazonEKSClusterPolicy",
          "schema_version": 0,
          "attributes": {
            "id": "superset-cluster-cluster-20240111061033500600000003-2024011106103497410000000b",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
            "role": "superset-cluster-cluster-20240111061033500600000003"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_partition.current"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "AmazonEKSVPCResourceController",
          "schema_version": 0,
          "attributes": {
            "id": "superset-cluster-cluster-20240111061033500600000003-2024011106103497010000000a",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
            "role": "superset-cluster-cluster-20240111061033500600000003"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_partition.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:618214806620:security-group/sg-0c7959dcb165d6c95",
            "description": "EKS cluster security group",
            "egress": [],
            "id": "sg-0c7959dcb165d6c95",
            "ingress": [
              {
                "cidr_blocks": [],
                "description": "Node groups to cluster API",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-070f2f450936cde76"
                ],
                "self": false,
                "to_port": 443
              }
            ],
            "name": "superset-cluster-cluster-2024011106104621820000000c",
            "name_prefix": "superset-cluster-cluster-",
            "owner_id": "618214806620",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "superset-cluster-cluster"
            },
            "tags_all": {
              "Name": "superset-cluster-cluster"
            },
            "timeouts": null,
            "vpc_id": "vpc-0eff67b7fceb0e080"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "node",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:618214806620:security-group/sg-070f2f450936cde76",
            "description": "EKS node shared security group",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow all egress",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-070f2f450936cde76",
            "ingress": [
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 4443/tcp webhook",
                "from_port": 4443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0c7959dcb165d6c95"
                ],
                "self": false,
                "to_port": 4443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 6443/tcp webhook",
                "from_port": 6443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0c7959dcb165d6c95"
                ],
                "self": false,
                "to_port": 6443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 8443/tcp webhook",
                "from_port": 8443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0c7959dcb165d6c95"
                ],
                "self": false,
                "to_port": 8443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 9443/tcp webhook",
                "from_port": 9443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0c7959dcb165d6c95"
                ],
                "self": false,
                "to_port": 9443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node groups",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0c7959dcb165d6c95"
                ],
                "self": false,
                "to_port": 443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node kubelets",
                "from_port": 10250,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0c7959dcb165d6c95"
                ],
                "self": false,
                "to_port": 10250
              },
              {
                "cidr_blocks": [],
                "description": "Node to node CoreDNS UDP",
                "from_port": 53,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "udp",
                "security_groups": [],
                "self": true,
                "to_port": 53
              },
              {
                "cidr_blocks": [],
                "description": "Node to node CoreDNS",
                "from_port": 53,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": true,
                "to_port": 53
              },
              {
                "cidr_blocks": [],
                "description": "Node to node ingress on ephemeral ports",
                "from_port": 1025,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": true,
                "to_port": 65535
              },
              {
                "cidr_blocks": [],
                "description": "elbv2.k8s.aws/targetGroupBinding=shared",
                "from_port": 30000,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0a377ef005af9578f"
                ],
                "self": false,
                "to_port": 30000
              }
            ],
            "name": "superset-cluster-node-2024011106104621900000000d",
            "name_prefix": "superset-cluster-node-",
            "owner_id": "618214806620",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "superset-cluster-node",
              "kubernetes.io/cluster/superset-cluster": "owned"
            },
            "tags_all": {
              "Name": "superset-cluster-node",
              "kubernetes.io/cluster/superset-cluster": "owned"
            },
            "timeouts": null,
            "vpc_id": "vpc-0eff67b7fceb0e080"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "ingress_nodes_443",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node groups to cluster API",
            "from_port": 443,
            "id": "sgrule-4031069332",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "tcp",
            "security_group_id": "sg-0c7959dcb165d6c95",
            "security_group_rule_id": "sgr-051cce964c98bfb8e",
            "self": false,
            "source_security_group_id": "sg-070f2f450936cde76",
            "timeouts": null,
            "to_port": 443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "node",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "egress_all",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "Allow all egress",
            "from_port": 0,
            "id": "sgrule-3459553786",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "-1",
            "security_group_id": "sg-070f2f450936cde76",
            "security_group_rule_id": "sgr-0c6e83378c4168e10",
            "self": false,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 0,
            "type": "egress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_443",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node groups",
            "from_port": 443,
            "id": "sgrule-203747539",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-070f2f450936cde76",
            "security_group_rule_id": "sgr-0c258f670b4fb37fe",
            "self": false,
            "source_security_group_id": "sg-0c7959dcb165d6c95",
            "timeouts": null,
            "to_port": 443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_4443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 4443/tcp webhook",
            "from_port": 4443,
            "id": "sgrule-1500409537",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-070f2f450936cde76",
            "security_group_rule_id": "sgr-083e28358cc426a1e",
            "self": false,
            "source_security_group_id": "sg-0c7959dcb165d6c95",
            "timeouts": null,
            "to_port": 4443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_6443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 6443/tcp webhook",
            "from_port": 6443,
            "id": "sgrule-2418805079",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-070f2f450936cde76",
            "security_group_rule_id": "sgr-0bfc96bdfcfa5c1ba",
            "self": false,
            "source_security_group_id": "sg-0c7959dcb165d6c95",
            "timeouts": null,
            "to_port": 6443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_8443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 8443/tcp webhook",
            "from_port": 8443,
            "id": "sgrule-2205169014",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-070f2f450936cde76",
            "security_group_rule_id": "sgr-0d97b90f3a79e8f31",
            "self": false,
            "source_security_group_id": "sg-0c7959dcb165d6c95",
            "timeouts": null,
            "to_port": 8443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_9443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 9443/tcp webhook",
            "from_port": 9443,
            "id": "sgrule-3889235645",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-070f2f450936cde76",
            "security_group_rule_id": "sgr-00db900a269dbdca6",
            "self": false,
            "source_security_group_id": "sg-0c7959dcb165d6c95",
            "timeouts": null,
            "to_port": 9443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_kubelet",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node kubelets",
            "from_port": 10250,
            "id": "sgrule-2370511509",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-070f2f450936cde76",
            "security_group_rule_id": "sgr-062c9fda9675a5818",
            "self": false,
            "source_security_group_id": "sg-0c7959dcb165d6c95",
            "timeouts": null,
            "to_port": 10250,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_nodes_ephemeral",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node to node ingress on ephemeral ports",
            "from_port": 1025,
            "id": "sgrule-2351600363",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-070f2f450936cde76",
            "security_group_rule_id": "sgr-0fe4b85d9a211c6e8",
            "self": true,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 65535,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_self_coredns_tcp",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node to node CoreDNS",
            "from_port": 53,
            "id": "sgrule-627365433",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-070f2f450936cde76",
            "security_group_rule_id": "sgr-09f3984706b0f4521",
            "self": true,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 53,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_self_coredns_udp",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node to node CoreDNS UDP",
            "from_port": 53,
            "id": "sgrule-2168157654",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "udp",
            "security_group_id": "sg-070f2f450936cde76",
            "security_group_rule_id": "sgr-086c8c7df41874902",
            "self": true,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 53,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "time_sleep",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/time\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "create_duration": "30s",
            "destroy_duration": null,
            "id": "2024-01-11T06:20:41Z",
            "triggers": {
              "cluster_certificate_authority_data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJQmZGb2R1TEhIcDB3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRBeE1URXdOakV4TVRaYUZ3MHpOREF4TURnd05qRTJNVFphTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUMyc0Y2SElQQTl6dWJMSlUzYXV0RmdsZEtHbURPa3QyQW82QmxSejZuSGVqLzB5MmlrVlRWa25lcysKMmxVSm9VMnMvTVRiQVJjM3o4eUdFQ3BRcTA2cjgwdWUwSGlJdVN5TGZyUmNtTGhCeFJPVHdYNnlwYTdqcDlkawplME9Fb3dPV29CZHFVZEhVcjVDTzY5REsxMUpaSnF2UmxxTDhIb0VXd1JiNWJMbTNuQmJVcURKQjkxR01lTnBwCmVYWUZIUVlEOFRJUnA5alFNUktCR0dPU2NvVVA3YkVRMDNxa3NHcEJxYnZFSUY3MUJTM1ZnQ3prWDd2MS9hbGMKbm1Ed3RydEhYeHNjeHFPdmowL25yWEZEYzlEUjhETmFYUEZ3SEdXcElTNUxBWThiTW43Z3V6c0ErcGdMZ3JvdwphMUlrSHI5ZUNGVllOTElWTGpFVTAxRzd3ZTh6QWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSWUlNbFpQVDZrT2htdVEzZXRyYmZHbWw4YXNEQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQVJhSEFsV0tkNAppTmU5MEFNYUhwbVJOUmtDNnpSZ1RNdlpnRWhmVXYwL0tzeldsQ00vYjVjVUdDV0lhSk00ZlJXaXZPS3RCeERZCkxKUVBrUmVKOFpYa01JZmMrVGljL2p0LzBTYzNheFgxMFFTUE50U2MwaithWkNpclVsSHNIMnhZSU5rcWNHcFYKUi9vaVRWWi9CTTNBR2JHajVkT21NVDF2aTA1ZElsNkRkN1FyVXRQQWdZNTg1ZWlybGI1ZjBqTWZDOUtBbWRScAptZk11N2VlLzRNUmZxVGQ0UE1KVVlkM3R5RjNSR1pGNjlrOXJ0NG5iYmtSNHFoTlNKem5jbGp6Z3pSVFduNlY0Cms2Wng2TW4xUTJEaldtVU0rbUhrMEt3TkptVHV1M09JTzk1TjB3a0wyU29pUlRTZm91cmhJSUVWR2ZmQ3d0MUoKT1dUcENxOXAxL0ZLCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
              "cluster_endpoint": "https://183AC2354170D59D406D00C505D3956B.gr7.us-west-2.eks.amazonaws.com",
              "cluster_name": "superset-cluster",
              "cluster_version": "1.27"
            }
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "618214806620",
            "arn": "arn:aws:iam::618214806620:root",
            "id": "618214806620",
            "user_id": "618214806620"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2560088296",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSNodeAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_policy_documents": null,
            "policy_id": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "ec2.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSNodeAssumeRole"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "managed",
      "type": "aws_eks_node_group",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "ami_type": "AL2_x86_64",
            "arn": "arn:aws:eks:us-west-2:618214806620:nodegroup/superset-cluster/node-group-1-20240115045651483000000001/74c685bd-6274-47c8-37ed-65ece2108e85",
            "capacity_type": "ON_DEMAND",
            "cluster_name": "superset-cluster",
            "disk_size": 0,
            "force_update_version": null,
            "id": "superset-cluster:node-group-1-20240115045651483000000001",
            "instance_types": [
              "t3.medium"
            ],
            "labels": {},
            "launch_template": [
              {
                "id": "lt-0c05789b9c7743705",
                "name": "one-20240111062041239900000011",
                "version": "1"
              }
            ],
            "node_group_name": "node-group-1-20240115045651483000000001",
            "node_group_name_prefix": "node-group-1-",
            "node_role_arn": "arn:aws:iam::618214806620:role/node-group-1-eks-node-group-20240111061033500200000002",
            "release_version": "1.27.9-20240110",
            "remote_access": [],
            "resources": [
              {
                "autoscaling_groups": [
                  {
                    "name": "eks-node-group-1-20240115045651483000000001-74c685bd-6274-47c8-37ed-65ece2108e85"
                  }
                ],
                "remote_access_security_group_id": ""
              }
            ],
            "scaling_config": [
              {
                "desired_size": 2,
                "max_size": 3,
                "min_size": 1
              }
            ],
            "status": "ACTIVE",
            "subnet_ids": [
              "subnet-0017f503328b03400",
              "subnet-0b2f66184c5561ca2",
              "subnet-0e3dd2ce96486af92"
            ],
            "tags": {
              "Name": "node-group-1"
            },
            "tags_all": {
              "Name": "node-group-1"
            },
            "taint": [],
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            },
            "update_config": [
              {
                "max_unavailable": 0,
                "max_unavailable_percentage": 33
              }
            ],
            "version": "1.27"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAwLCJkZWxldGUiOjM2MDAwMDAwMDAwMDAsInVwZGF0ZSI6MzYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::618214806620:role/node-group-1-eks-node-group-20240111061033500200000002",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-01-11T06:10:33Z",
            "description": "EKS managed node group IAM role",
            "force_detach_policies": true,
            "id": "node-group-1-eks-node-group-20240111061033500200000002",
            "inline_policy": [],
            "managed_policy_arns": [
              "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
              "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
              "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
            ],
            "max_session_duration": 3600,
            "name": "node-group-1-eks-node-group-20240111061033500200000002",
            "name_prefix": "node-group-1-eks-node-group-",
            "path": "/",
            "permissions_boundary": "",
            "tags": {},
            "tags_all": {},
            "unique_id": "AROAY74DZKROERRCCDZZH"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
          "schema_version": 0,
          "attributes": {
            "id": "node-group-1-eks-node-group-20240111061033500200000002-20240111061034522100000006",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
            "role": "node-group-1-eks-node-group-20240111061033500200000002"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
          "schema_version": 0,
          "attributes": {
            "id": "node-group-1-eks-node-group-20240111061033500200000002-20240111061034477500000004",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
            "role": "node-group-1-eks-node-group-20240111061033500200000002"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
          "schema_version": 0,
          "attributes": {
            "id": "node-group-1-eks-node-group-20240111061033500200000002-20240111061034655300000009",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
            "role": "node-group-1-eks-node-group-20240111061033500200000002"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"one\"]",
      "mode": "managed",
      "type": "aws_launch_template",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:618214806620:launch-template/lt-0c05789b9c7743705",
            "block_device_mappings": [],
            "capacity_reservation_specification": [],
            "cpu_options": [],
            "credit_specification": [],
            "default_version": 1,
            "description": "Custom launch template for node-group-1 EKS managed node group",
            "disable_api_stop": false,
            "disable_api_termination": false,
            "ebs_optimized": "",
            "elastic_gpu_specifications": [],
            "elastic_inference_accelerator": [],
            "enclave_options": [],
            "hibernation_options": [],
            "iam_instance_profile": [],
            "id": "lt-0c05789b9c7743705",
            "image_id": "",
            "instance_initiated_shutdown_behavior": "",
            "instance_market_options": [],
            "instance_requirements": [],
            "instance_type": "",
            "kernel_id": "",
            "key_name": "",
            "latest_version": 1,
            "license_specification": [],
            "maintenance_options": [],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_protocol_ipv6": "",
                "http_put_response_hop_limit": 2,
                "http_tokens": "required",
                "instance_metadata_tags": ""
              }
            ],
            "monitoring": [
              {
                "enabled": true
              }
            ],
            "name": "one-20240111062041239900000011",
            "name_prefix": "one-",
            "network_interfaces": [],
            "placement": [],
            "private_dns_name_options": [],
            "ram_disk_id": "",
            "security_group_names": [],
            "tag_specifications": [
              {
                "resource_type": "instance",
                "tags": {
                  "Name": "node-group-1"
                }
              },
              {
                "resource_type": "network-interface",
                "tags": {
                  "Name": "node-group-1"
                }
              },
              {
                "resource_type": "volume",
                "tags": {
                  "Name": "node-group-1"
                }
              }
            ],
            "tags": {},
            "tags_all": {},
            "update_default_version": true,
            "user_data": "",
            "vpc_security_group_ids": [
              "sg-070f2f450936cde76"
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"two\"]",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "618214806620",
            "arn": "arn:aws:iam::618214806620:root",
            "id": "618214806620",
            "user_id": "618214806620"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"two\"]",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2560088296",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSNodeAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_policy_documents": null,
            "policy_id": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "ec2.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSNodeAssumeRole"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"two\"]",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"two\"]",
      "mode": "managed",
      "type": "aws_eks_node_group",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "ami_type": "AL2_x86_64",
            "arn": "arn:aws:eks:us-west-2:618214806620:nodegroup/superset-cluster/node-group-2-20240115045651483400000003/82c685bd-626f-4313-bbda-230943d8d240",
            "capacity_type": "ON_DEMAND",
            "cluster_name": "superset-cluster",
            "disk_size": 0,
            "force_update_version": null,
            "id": "superset-cluster:node-group-2-20240115045651483400000003",
            "instance_types": [
              "t3.medium"
            ],
            "labels": {},
            "launch_template": [
              {
                "id": "lt-0d89926b3ca3f211c",
                "name": "two-20240111062041240200000013",
                "version": "1"
              }
            ],
            "node_group_name": "node-group-2-20240115045651483400000003",
            "node_group_name_prefix": "node-group-2-",
            "node_role_arn": "arn:aws:iam::618214806620:role/node-group-2-eks-node-group-20240111061033499400000001",
            "release_version": "1.27.9-20240110",
            "remote_access": [],
            "resources": [
              {
                "autoscaling_groups": [
                  {
                    "name": "eks-node-group-2-20240115045651483400000003-82c685bd-626f-4313-bbda-230943d8d240"
                  }
                ],
                "remote_access_security_group_id": ""
              }
            ],
            "scaling_config": [
              {
                "desired_size": 2,
                "max_size": 2,
                "min_size": 1
              }
            ],
            "status": "ACTIVE",
            "subnet_ids": [
              "subnet-0017f503328b03400",
              "subnet-0b2f66184c5561ca2",
              "subnet-0e3dd2ce96486af92"
            ],
            "tags": {
              "Name": "node-group-2"
            },
            "tags_all": {
              "Name": "node-group-2"
            },
            "taint": [],
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            },
            "update_config": [
              {
                "max_unavailable": 0,
                "max_unavailable_percentage": 33
              }
            ],
            "version": "1.27"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAwLCJkZWxldGUiOjM2MDAwMDAwMDAwMDAsInVwZGF0ZSI6MzYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"two\"]",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::618214806620:role/node-group-2-eks-node-group-20240111061033499400000001",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-01-11T06:10:33Z",
            "description": "EKS managed node group IAM role",
            "force_detach_policies": true,
            "id": "node-group-2-eks-node-group-20240111061033499400000001",
            "inline_policy": [],
            "managed_policy_arns": [
              "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
              "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
              "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
            ],
            "max_session_duration": 3600,
            "name": "node-group-2-eks-node-group-20240111061033499400000001",
            "name_prefix": "node-group-2-eks-node-group-",
            "path": "/",
            "permissions_boundary": "",
            "tags": {},
            "tags_all": {},
            "unique_id": "AROAY74DZKROCT577ZXK2"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"two\"]",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
          "schema_version": 0,
          "attributes": {
            "id": "node-group-2-eks-node-group-20240111061033499400000001-20240111061034644500000008",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
            "role": "node-group-2-eks-node-group-20240111061033499400000001"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
          "schema_version": 0,
          "attributes": {
            "id": "node-group-2-eks-node-group-20240111061033499400000001-20240111061034515000000005",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
            "role": "node-group-2-eks-node-group-20240111061033499400000001"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
          "schema_version": 0,
          "attributes": {
            "id": "node-group-2-eks-node-group-20240111061033499400000001-20240111061034627100000007",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
            "role": "node-group-2-eks-node-group-20240111061033499400000001"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.eks_managed_node_group[\"two\"]",
      "mode": "managed",
      "type": "aws_launch_template",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:618214806620:launch-template/lt-0d89926b3ca3f211c",
            "block_device_mappings": [],
            "capacity_reservation_specification": [],
            "cpu_options": [],
            "credit_specification": [],
            "default_version": 1,
            "description": "Custom launch template for node-group-2 EKS managed node group",
            "disable_api_stop": false,
            "disable_api_termination": false,
            "ebs_optimized": "",
            "elastic_gpu_specifications": [],
            "elastic_inference_accelerator": [],
            "enclave_options": [],
            "hibernation_options": [],
            "iam_instance_profile": [],
            "id": "lt-0d89926b3ca3f211c",
            "image_id": "",
            "instance_initiated_shutdown_behavior": "",
            "instance_market_options": [],
            "instance_requirements": [],
            "instance_type": "",
            "kernel_id": "",
            "key_name": "",
            "latest_version": 1,
            "license_specification": [],
            "maintenance_options": [],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_protocol_ipv6": "",
                "http_put_response_hop_limit": 2,
                "http_tokens": "required",
                "instance_metadata_tags": ""
              }
            ],
            "monitoring": [
              {
                "enabled": true
              }
            ],
            "name": "two-20240111062041240200000013",
            "name_prefix": "two-",
            "network_interfaces": [],
            "placement": [],
            "private_dns_name_options": [],
            "ram_disk_id": "",
            "security_group_names": [],
            "tag_specifications": [
              {
                "resource_type": "instance",
                "tags": {
                  "Name": "node-group-2"
                }
              },
              {
                "resource_type": "network-interface",
                "tags": {
                  "Name": "node-group-2"
                }
              },
              {
                "resource_type": "volume",
                "tags": {
                  "Name": "node-group-2"
                }
              }
            ],
            "tags": {},
            "tags_all": {},
            "update_default_version": true,
            "user_data": "",
            "vpc_security_group_ids": [
              "sg-070f2f450936cde76"
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "account_id": "618214806620",
            "arn": "arn:aws:iam::618214806620:root",
            "id": "618214806620",
            "user_id": "618214806620"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "3758270953",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"KeyAdministration\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"kms:Update*\",\n        \"kms:UntagResource\",\n        \"kms:TagResource\",\n        \"kms:ScheduleKeyDeletion\",\n        \"kms:Revoke*\",\n        \"kms:ReplicateKey\",\n        \"kms:Put*\",\n        \"kms:List*\",\n        \"kms:ImportKeyMaterial\",\n        \"kms:Get*\",\n        \"kms:Enable*\",\n        \"kms:Disable*\",\n        \"kms:Describe*\",\n        \"kms:Delete*\",\n        \"kms:Create*\",\n        \"kms:CancelKeyDeletion\"\n      ],\n      \"Resource\": \"*\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::618214806620:root\"\n      }\n    },\n    {\n      \"Sid\": \"KeyUsage\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"kms:ReEncrypt*\",\n        \"kms:GenerateDataKey*\",\n        \"kms:Encrypt\",\n        \"kms:DescribeKey\",\n        \"kms:Decrypt\"\n      ],\n      \"Resource\": \"*\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::618214806620:role/superset-cluster-cluster-20240111061033500600000003\"\n      }\n    }\n  ]\n}",
            "override_policy_documents": null,
            "policy_id": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "kms:CancelKeyDeletion",
                  "kms:Create*",
                  "kms:Delete*",
                  "kms:Describe*",
                  "kms:Disable*",
                  "kms:Enable*",
                  "kms:Get*",
                  "kms:ImportKeyMaterial",
                  "kms:List*",
                  "kms:Put*",
                  "kms:ReplicateKey",
                  "kms:Revoke*",
                  "kms:ScheduleKeyDeletion",
                  "kms:TagResource",
                  "kms:UntagResource",
                  "kms:Update*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::618214806620:root"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [
                  "*"
                ],
                "sid": "KeyAdministration"
              },
              {
                "actions": [
                  "kms:Decrypt",
                  "kms:DescribeKey",
                  "kms:Encrypt",
                  "kms:GenerateDataKey*",
                  "kms:ReEncrypt*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::618214806620:role/superset-cluster-cluster-20240111061033500600000003"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [
                  "*"
                ],
                "sid": "KeyUsage"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "managed",
      "type": "aws_kms_alias",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "cluster",
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:kms:us-west-2:618214806620:alias/eks/superset-cluster",
            "id": "alias/eks/superset-cluster",
            "name": "alias/eks/superset-cluster",
            "name_prefix": "",
            "target_key_arn": "arn:aws:kms:us-west-2:618214806620:key/dc495982-c097-4f6a-93ee-566f93e32853",
            "target_key_id": "dc495982-c097-4f6a-93ee-566f93e32853"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "managed",
      "type": "aws_kms_key",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:kms:us-west-2:618214806620:key/dc495982-c097-4f6a-93ee-566f93e32853",
            "bypass_policy_lockout_safety_check": false,
            "custom_key_store_id": "",
            "customer_master_key_spec": "SYMMETRIC_DEFAULT",
            "deletion_window_in_days": null,
            "description": "superset-cluster cluster encryption key",
            "enable_key_rotation": true,
            "id": "dc495982-c097-4f6a-93ee-566f93e32853",
            "is_enabled": true,
            "key_id": "dc495982-c097-4f6a-93ee-566f93e32853",
            "key_usage": "ENCRYPT_DECRYPT",
            "multi_region": false,
            "policy": "{\"Statement\":[{\"Action\":[\"kms:Update*\",\"kms:UntagResource\",\"kms:TagResource\",\"kms:ScheduleKeyDeletion\",\"kms:Revoke*\",\"kms:ReplicateKey\",\"kms:Put*\",\"kms:List*\",\"kms:ImportKeyMaterial\",\"kms:Get*\",\"kms:Enable*\",\"kms:Disable*\",\"kms:Describe*\",\"kms:Delete*\",\"kms:Create*\",\"kms:CancelKeyDeletion\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::618214806620:root\"},\"Resource\":\"*\",\"Sid\":\"KeyAdministration\"},{\"Action\":[\"kms:ReEncrypt*\",\"kms:GenerateDataKey*\",\"kms:Encrypt\",\"kms:DescribeKey\",\"kms:Decrypt\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::618214806620:role/superset-cluster-cluster-20240111061033500600000003\"},\"Resource\":\"*\",\"Sid\":\"KeyUsage\"}],\"Version\":\"2012-10-17\"}",
            "tags": {},
            "tags_all": {},
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.lb_role",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "618214806620",
            "arn": "arn:aws:iam::618214806620:root",
            "id": "618214806620",
            "user_id": "618214806620"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.lb_role",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "load_balancer_controller",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "3014472196",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"iam:CreateServiceLinkedRole\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"iam:AWSServiceName\": \"elasticloadbalancing.amazonaws.com\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:DescribeTargetHealth\",\n        \"elasticloadbalancing:DescribeTargetGroups\",\n        \"elasticloadbalancing:DescribeTargetGroupAttributes\",\n        \"elasticloadbalancing:DescribeTags\",\n        \"elasticloadbalancing:DescribeSSLPolicies\",\n        \"elasticloadbalancing:DescribeRules\",\n        \"elasticloadbalancing:DescribeLoadBalancers\",\n        \"elasticloadbalancing:DescribeLoadBalancerAttributes\",\n        \"elasticloadbalancing:DescribeListeners\",\n        \"elasticloadbalancing:DescribeListenerCertificates\",\n        \"ec2:GetCoipPoolUsage\",\n        \"ec2:DescribeVpcs\",\n        \"ec2:DescribeVpcPeeringConnections\",\n        \"ec2:DescribeTags\",\n        \"ec2:DescribeSubnets\",\n        \"ec2:DescribeSecurityGroups\",\n        \"ec2:DescribeNetworkInterfaces\",\n        \"ec2:DescribeInternetGateways\",\n        \"ec2:DescribeInstances\",\n        \"ec2:DescribeCoipPools\",\n        \"ec2:DescribeAvailabilityZones\",\n        \"ec2:DescribeAddresses\",\n        \"ec2:DescribeAccountAttributes\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"wafv2:GetWebACLForResource\",\n        \"wafv2:GetWebACL\",\n        \"wafv2:DisassociateWebACL\",\n        \"wafv2:AssociateWebACL\",\n        \"waf-regional:GetWebACLForResource\",\n        \"waf-regional:GetWebACL\",\n        \"waf-regional:DisassociateWebACL\",\n        \"waf-regional:AssociateWebACL\",\n        \"shield:GetSubscriptionState\",\n        \"shield:DescribeProtection\",\n        \"shield:DeleteProtection\",\n        \"shield:CreateProtection\",\n        \"iam:ListServerCertificates\",\n        \"iam:GetServerCertificate\",\n        \"cognito-idp:DescribeUserPoolClient\",\n        \"acm:ListCertificates\",\n        \"acm:DescribeCertificate\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:RevokeSecurityGroupIngress\",\n        \"ec2:CreateSecurityGroup\",\n        \"ec2:AuthorizeSecurityGroupIngress\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:CreateTags\",\n      \"Resource\": \"arn:aws:ec2:*:*:security-group/*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n        },\n        \"StringEquals\": {\n          \"ec2:CreateAction\": \"CreateSecurityGroup\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DeleteTags\",\n        \"ec2:CreateTags\"\n      ],\n      \"Resource\": \"arn:aws:ec2:*:*:security-group/*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"true\",\n          \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:RevokeSecurityGroupIngress\",\n        \"ec2:DeleteSecurityGroup\",\n        \"ec2:AuthorizeSecurityGroupIngress\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:CreateTargetGroup\",\n        \"elasticloadbalancing:CreateLoadBalancer\",\n        \"elasticloadbalancing:AddTags\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:DeleteRule\",\n        \"elasticloadbalancing:DeleteListener\",\n        \"elasticloadbalancing:CreateRule\",\n        \"elasticloadbalancing:CreateListener\",\n        \"elasticloadbalancing:AddTags\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:RemoveTags\",\n        \"elasticloadbalancing:AddTags\"\n      ],\n      \"Resource\": [\n        \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"\n      ],\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"true\",\n          \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:RemoveTags\",\n        \"elasticloadbalancing:AddTags\"\n      ],\n      \"Resource\": [\n        \"arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*\"\n      ]\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:SetSubnets\",\n        \"elasticloadbalancing:SetSecurityGroups\",\n        \"elasticloadbalancing:SetIpAddressType\",\n        \"elasticloadbalancing:ModifyTargetGroupAttributes\",\n        \"elasticloadbalancing:ModifyTargetGroup\",\n        \"elasticloadbalancing:ModifyLoadBalancerAttributes\",\n        \"elasticloadbalancing:DeleteTargetGroup\",\n        \"elasticloadbalancing:DeleteLoadBalancer\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"elasticloadbalancing:AddTags\",\n      \"Resource\": [\n        \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"\n      ],\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n        },\n        \"StringEquals\": {\n          \"elasticloadbalancing:CreateAction\": [\n            \"CreateTargetGroup\",\n            \"CreateLoadBalancer\"\n          ]\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:RegisterTargets\",\n        \"elasticloadbalancing:DeregisterTargets\"\n      ],\n      \"Resource\": \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:SetWebAcl\",\n        \"elasticloadbalancing:RemoveListenerCertificates\",\n        \"elasticloadbalancing:ModifyRule\",\n        \"elasticloadbalancing:ModifyListener\",\n        \"elasticloadbalancing:AddListenerCertificates\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
            "override_policy_documents": null,
            "policy_id": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "iam:CreateServiceLinkedRole"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "elasticloadbalancing.amazonaws.com"
                    ],
                    "variable": "iam:AWSServiceName"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:DescribeAccountAttributes",
                  "ec2:DescribeAddresses",
                  "ec2:DescribeAvailabilityZones",
                  "ec2:DescribeCoipPools",
                  "ec2:DescribeInstances",
                  "ec2:DescribeInternetGateways",
                  "ec2:DescribeNetworkInterfaces",
                  "ec2:DescribeSecurityGroups",
                  "ec2:DescribeSubnets",
                  "ec2:DescribeTags",
                  "ec2:DescribeVpcPeeringConnections",
                  "ec2:DescribeVpcs",
                  "ec2:GetCoipPoolUsage",
                  "elasticloadbalancing:DescribeListenerCertificates",
                  "elasticloadbalancing:DescribeListeners",
                  "elasticloadbalancing:DescribeLoadBalancerAttributes",
                  "elasticloadbalancing:DescribeLoadBalancers",
                  "elasticloadbalancing:DescribeRules",
                  "elasticloadbalancing:DescribeSSLPolicies",
                  "elasticloadbalancing:DescribeTags",
                  "elasticloadbalancing:DescribeTargetGroupAttributes",
                  "elasticloadbalancing:DescribeTargetGroups",
                  "elasticloadbalancing:DescribeTargetHealth"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "acm:DescribeCertificate",
                  "acm:ListCertificates",
                  "cognito-idp:DescribeUserPoolClient",
                  "iam:GetServerCertificate",
                  "iam:ListServerCertificates",
                  "shield:CreateProtection",
                  "shield:DeleteProtection",
                  "shield:DescribeProtection",
                  "shield:GetSubscriptionState",
                  "waf-regional:AssociateWebACL",
                  "waf-regional:DisassociateWebACL",
                  "waf-regional:GetWebACL",
                  "waf-regional:GetWebACLForResource",
                  "wafv2:AssociateWebACL",
                  "wafv2:DisassociateWebACL",
                  "wafv2:GetWebACL",
                  "wafv2:GetWebACLForResource"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:AuthorizeSecurityGroupIngress",
                  "ec2:CreateSecurityGroup",
                  "ec2:RevokeSecurityGroupIngress"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:CreateTags"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                  },
                  {
                    "test": "StringEquals",
                    "values": [
                      "CreateSecurityGroup"
                    ],
                    "variable": "ec2:CreateAction"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:ec2:*:*:security-group/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:CreateTags",
                  "ec2:DeleteTags"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                  },
                  {
                    "test": "Null",
                    "values": [
                      "true"
                    ],
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:ec2:*:*:security-group/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:AuthorizeSecurityGroupIngress",
                  "ec2:DeleteSecurityGroup",
                  "ec2:RevokeSecurityGroupIngress"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:AddTags",
                  "elasticloadbalancing:CreateLoadBalancer",
                  "elasticloadbalancing:CreateTargetGroup"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:AddTags",
                  "elasticloadbalancing:CreateListener",
                  "elasticloadbalancing:CreateRule",
                  "elasticloadbalancing:DeleteListener",
                  "elasticloadbalancing:DeleteRule"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:AddTags",
                  "elasticloadbalancing:RemoveTags"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                  },
                  {
                    "test": "Null",
                    "values": [
                      "true"
                    ],
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*",
                  "arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*",
                  "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:AddTags",
                  "elasticloadbalancing:RemoveTags"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*",
                  "arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*",
                  "arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*",
                  "arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:DeleteLoadBalancer",
                  "elasticloadbalancing:DeleteTargetGroup",
                  "elasticloadbalancing:ModifyLoadBalancerAttributes",
                  "elasticloadbalancing:ModifyTargetGroup",
                  "elasticloadbalancing:ModifyTargetGroupAttributes",
                  "elasticloadbalancing:SetIpAddressType",
                  "elasticloadbalancing:SetSecurityGroups",
                  "elasticloadbalancing:SetSubnets"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:AddTags"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                  },
                  {
                    "test": "StringEquals",
                    "values": [
                      "CreateTargetGroup",
                      "CreateLoadBalancer"
                    ],
                    "variable": "elasticloadbalancing:CreateAction"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*",
                  "arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*",
                  "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:DeregisterTargets",
                  "elasticloadbalancing:RegisterTargets"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:AddListenerCertificates",
                  "elasticloadbalancing:ModifyListener",
                  "elasticloadbalancing:ModifyRule",
                  "elasticloadbalancing:RemoveListenerCertificates",
                  "elasticloadbalancing:SetWebAcl"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.lb_role",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "810512722",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n      \"Principal\": {\n        \"Federated\": \"arn:aws:iam::618214806620:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/183AC2354170D59D406D00C505D3956B\"\n      },\n      \"Condition\": {\n        \"StringEquals\": {\n          \"oidc.eks.us-west-2.amazonaws.com/id/183AC2354170D59D406D00C505D3956B:aud\": \"sts.amazonaws.com\",\n          \"oidc.eks.us-west-2.amazonaws.com/id/183AC2354170D59D406D00C505D3956B:sub\": \"system:serviceaccount:kube-system:aws-load-balancer-controller\"\n        }\n      }\n    }\n  ]\n}",
            "override_policy_documents": null,
            "policy_id": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRoleWithWebIdentity"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "sts.amazonaws.com"
                    ],
                    "variable": "oidc.eks.us-west-2.amazonaws.com/id/183AC2354170D59D406D00C505D3956B:aud"
                  },
                  {
                    "test": "StringEquals",
                    "values": [
                      "system:serviceaccount:kube-system:aws-load-balancer-controller"
                    ],
                    "variable": "oidc.eks.us-west-2.amazonaws.com/id/183AC2354170D59D406D00C505D3956B:sub"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::618214806620:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/183AC2354170D59D406D00C505D3956B"
                    ],
                    "type": "Federated"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.lb_role",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.lb_role",
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "description": "US West (Oregon)",
            "endpoint": "ec2.us-west-2.amazonaws.com",
            "id": "us-west-2",
            "name": "us-west-2"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.lb_role",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "load_balancer_controller",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::618214806620:policy/AmazonEKS_AWS_Load_Balancer_Controller-20240112014501091300000001",
            "description": "Provides permissions for AWS Load Balancer Controller addon",
            "id": "arn:aws:iam::618214806620:policy/AmazonEKS_AWS_Load_Balancer_Controller-20240112014501091300000001",
            "name": "AmazonEKS_AWS_Load_Balancer_Controller-20240112014501091300000001",
            "name_prefix": "AmazonEKS_AWS_Load_Balancer_Controller-",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":\"iam:CreateServiceLinkedRole\",\"Condition\":{\"StringEquals\":{\"iam:AWSServiceName\":\"elasticloadbalancing.amazonaws.com\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:DescribeTargetHealth\",\"elasticloadbalancing:DescribeTargetGroups\",\"elasticloadbalancing:DescribeTargetGroupAttributes\",\"elasticloadbalancing:DescribeTags\",\"elasticloadbalancing:DescribeSSLPolicies\",\"elasticloadbalancing:DescribeRules\",\"elasticloadbalancing:DescribeLoadBalancers\",\"elasticloadbalancing:DescribeLoadBalancerAttributes\",\"elasticloadbalancing:DescribeListeners\",\"elasticloadbalancing:DescribeListenerCertificates\",\"ec2:GetCoipPoolUsage\",\"ec2:DescribeVpcs\",\"ec2:DescribeVpcPeeringConnections\",\"ec2:DescribeTags\",\"ec2:DescribeSubnets\",\"ec2:DescribeSecurityGroups\",\"ec2:DescribeNetworkInterfaces\",\"ec2:DescribeInternetGateways\",\"ec2:DescribeInstances\",\"ec2:DescribeCoipPools\",\"ec2:DescribeAvailabilityZones\",\"ec2:DescribeAddresses\",\"ec2:DescribeAccountAttributes\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"wafv2:GetWebACLForResource\",\"wafv2:GetWebACL\",\"wafv2:DisassociateWebACL\",\"wafv2:AssociateWebACL\",\"waf-regional:GetWebACLForResource\",\"waf-regional:GetWebACL\",\"waf-regional:DisassociateWebACL\",\"waf-regional:AssociateWebACL\",\"shield:GetSubscriptionState\",\"shield:DescribeProtection\",\"shield:DeleteProtection\",\"shield:CreateProtection\",\"iam:ListServerCertificates\",\"iam:GetServerCertificate\",\"cognito-idp:DescribeUserPoolClient\",\"acm:ListCertificates\",\"acm:DescribeCertificate\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:RevokeSecurityGroupIngress\",\"ec2:CreateSecurityGroup\",\"ec2:AuthorizeSecurityGroupIngress\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"ec2:CreateTags\",\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"},\"StringEquals\":{\"ec2:CreateAction\":\"CreateSecurityGroup\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:ec2:*:*:security-group/*\"},{\"Action\":[\"ec2:DeleteTags\",\"ec2:CreateTags\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"true\",\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:ec2:*:*:security-group/*\"},{\"Action\":[\"ec2:RevokeSecurityGroupIngress\",\"ec2:DeleteSecurityGroup\",\"ec2:AuthorizeSecurityGroupIngress\"],\"Condition\":{\"Null\":{\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:CreateTargetGroup\",\"elasticloadbalancing:CreateLoadBalancer\",\"elasticloadbalancing:AddTags\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:DeleteRule\",\"elasticloadbalancing:DeleteListener\",\"elasticloadbalancing:CreateRule\",\"elasticloadbalancing:CreateListener\",\"elasticloadbalancing:AddTags\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:RemoveTags\",\"elasticloadbalancing:AddTags\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"true\",\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"]},{\"Action\":[\"elasticloadbalancing:RemoveTags\",\"elasticloadbalancing:AddTags\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*\"]},{\"Action\":[\"elasticloadbalancing:SetSubnets\",\"elasticloadbalancing:SetSecurityGroups\",\"elasticloadbalancing:SetIpAddressType\",\"elasticloadbalancing:ModifyTargetGroupAttributes\",\"elasticloadbalancing:ModifyTargetGroup\",\"elasticloadbalancing:ModifyLoadBalancerAttributes\",\"elasticloadbalancing:DeleteTargetGroup\",\"elasticloadbalancing:DeleteLoadBalancer\"],\"Condition\":{\"Null\":{\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"elasticloadbalancing:AddTags\",\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"},\"StringEquals\":{\"elasticloadbalancing:CreateAction\":[\"CreateTargetGroup\",\"CreateLoadBalancer\"]}},\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"]},{\"Action\":[\"elasticloadbalancing:RegisterTargets\",\"elasticloadbalancing:DeregisterTargets\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\"},{\"Action\":[\"elasticloadbalancing:SetWebAcl\",\"elasticloadbalancing:RemoveListenerCertificates\",\"elasticloadbalancing:ModifyRule\",\"elasticloadbalancing:ModifyListener\",\"elasticloadbalancing:AddListenerCertificates\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPAY74DZKROOEUA2YSVE",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.lb_role.data.aws_iam_policy_document.load_balancer_controller",
            "module.lb_role.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.lb_role",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::618214806620:role/superset_eks_lb",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.us-west-2.amazonaws.com/id/183AC2354170D59D406D00C505D3956B:aud\":\"sts.amazonaws.com\",\"oidc.eks.us-west-2.amazonaws.com/id/183AC2354170D59D406D00C505D3956B:sub\":\"system:serviceaccount:kube-system:aws-load-balancer-controller\"}},\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::618214806620:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/183AC2354170D59D406D00C505D3956B\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-01-12T01:45:01Z",
            "description": "",
            "force_detach_policies": true,
            "id": "superset_eks_lb",
            "inline_policy": [],
            "managed_policy_arns": [
              "arn:aws:iam::618214806620:policy/AmazonEKS_AWS_Load_Balancer_Controller-20240112014501091300000001"
            ],
            "max_session_duration": 3600,
            "name": "superset_eks_lb",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": "",
            "tags": {},
            "tags_all": {},
            "unique_id": "AROAY74DZKROG4BZYGOWG"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.lb_role.data.aws_caller_identity.current",
            "module.lb_role.data.aws_iam_policy_document.this",
            "module.lb_role.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.lb_role",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "load_balancer_controller",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "superset_eks_lb-20240112014501920900000002",
            "policy_arn": "arn:aws:iam::618214806620:policy/AmazonEKS_AWS_Load_Balancer_Controller-20240112014501091300000001",
            "role": "superset_eks_lb"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.lb_role.aws_iam_policy.load_balancer_controller",
            "module.lb_role.aws_iam_role.this",
            "module.lb_role.data.aws_caller_identity.current",
            "module.lb_role.data.aws_iam_policy_document.load_balancer_controller",
            "module.lb_role.data.aws_iam_policy_document.this",
            "module.lb_role.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.superset_namespace",
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "namespace",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "superset",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "superset",
                "resource_version": "1158335",
                "uid": "ce4ed39f-70f0-4577-b4bc-8d04e4026e8c"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.superset_namespace.null_resource.dependency_getter",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.superset_namespace",
      "mode": "managed",
      "type": "null_resource",
      "name": "dependency_getter",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "1557666581501769654",
            "triggers": {
              "instance": ""
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.superset_namespace.module.namespace_roles",
      "mode": "managed",
      "type": "kubernetes_role",
      "name": "rbac_helm_metadata_access",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "superset/superset-helm-metadata-access",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "superset-helm-metadata-access",
                "namespace": "superset",
                "resource_version": "1158341",
                "uid": "79d7378b-0b34-4751-aa2a-d0d2266bdf1f"
              }
            ],
            "rule": [
              {
                "api_groups": [
                  "",
                  "apps",
                  "extensions"
                ],
                "resource_names": [],
                "resources": [
                  "secrets"
                ],
                "verbs": [
                  "*"
                ]
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.superset_namespace.kubernetes_namespace.namespace",
            "module.superset_namespace.module.namespace_roles.null_resource.dependency_getter",
            "module.superset_namespace.null_resource.dependency_getter",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.superset_namespace.module.namespace_roles",
      "mode": "managed",
      "type": "kubernetes_role",
      "name": "rbac_helm_resource_access",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "superset/superset-helm-resource-access",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "superset-helm-resource-access",
                "namespace": "superset",
                "resource_version": "1158342",
                "uid": "ddb68671-c563-47ed-91ab-7f70762ac7a3"
              }
            ],
            "rule": [
              {
                "api_groups": [
                  "",
                  "apps",
                  "batch",
                  "extensions",
                  "rbac.authorization.k8s.io"
                ],
                "resource_names": [],
                "resources": [
                  "*"
                ],
                "verbs": [
                  "*"
                ]
              },
              {
                "api_groups": [
                  "policy"
                ],
                "resource_names": [],
                "resources": [
                  "poddisruptionbudgets"
                ],
                "verbs": [
                  "*"
                ]
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.superset_namespace.kubernetes_namespace.namespace",
            "module.superset_namespace.module.namespace_roles.null_resource.dependency_getter",
            "module.superset_namespace.null_resource.dependency_getter",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.superset_namespace.module.namespace_roles",
      "mode": "managed",
      "type": "kubernetes_role",
      "name": "rbac_role_access_all",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "superset/superset-access-all",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "superset-access-all",
                "namespace": "superset",
                "resource_version": "1158339",
                "uid": "b3106d15-fb52-47e1-8985-2fa910433199"
              }
            ],
            "rule": [
              {
                "api_groups": [
                  "*"
                ],
                "resource_names": [],
                "resources": [
                  "*"
                ],
                "verbs": [
                  "*"
                ]
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.superset_namespace.kubernetes_namespace.namespace",
            "module.superset_namespace.module.namespace_roles.null_resource.dependency_getter",
            "module.superset_namespace.null_resource.dependency_getter",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.superset_namespace.module.namespace_roles",
      "mode": "managed",
      "type": "kubernetes_role",
      "name": "rbac_role_access_read_only",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "superset/superset-access-read-only",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "superset-access-read-only",
                "namespace": "superset",
                "resource_version": "1158340",
                "uid": "7d75097d-364a-4924-b37b-660766825e99"
              }
            ],
            "rule": [
              {
                "api_groups": [
                  "*"
                ],
                "resource_names": [],
                "resources": [
                  "*"
                ],
                "verbs": [
                  "get",
                  "list",
                  "watch"
                ]
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.superset_namespace.kubernetes_namespace.namespace",
            "module.superset_namespace.module.namespace_roles.null_resource.dependency_getter",
            "module.superset_namespace.null_resource.dependency_getter",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.superset_namespace.module.namespace_roles",
      "mode": "managed",
      "type": "null_resource",
      "name": "dependency_getter",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "2425290186194725525",
            "triggers": {
              "instance": ""
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_default_network_acl",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:618214806620:network-acl/acl-087cc658b62d70000",
            "default_network_acl_id": "acl-087cc658b62d70000",
            "egress": [
              {
                "action": "allow",
                "cidr_block": "",
                "from_port": 0,
                "icmp_code": 0,
                "icmp_type": 0,
                "ipv6_cidr_block": "::/0",
                "protocol": "-1",
                "rule_no": 101,
                "to_port": 0
              },
              {
                "action": "allow",
                "cidr_block": "0.0.0.0/0",
                "from_port": 0,
                "icmp_code": 0,
                "icmp_type": 0,
                "ipv6_cidr_block": "",
                "protocol": "-1",
                "rule_no": 100,
                "to_port": 0
              }
            ],
            "id": "acl-087cc658b62d70000",
            "ingress": [
              {
                "action": "allow",
                "cidr_block": "",
                "from_port": 0,
                "icmp_code": 0,
                "icmp_type": 0,
                "ipv6_cidr_block": "::/0",
                "protocol": "-1",
                "rule_no": 101,
                "to_port": 0
              },
              {
                "action": "allow",
                "cidr_block": "0.0.0.0/0",
                "from_port": 0,
                "icmp_code": 0,
                "icmp_type": 0,
                "ipv6_cidr_block": "",
                "protocol": "-1",
                "rule_no": 100,
                "to_port": 0
              }
            ],
            "owner_id": "618214806620",
            "subnet_ids": [
              "subnet-0017f503328b03400",
              "subnet-02f871694d657d56a",
              "subnet-04384277c535c8e77",
              "subnet-0b2f66184c5561ca2",
              "subnet-0d5d942ee375d6a87",
              "subnet-0e3dd2ce96486af92"
            ],
            "tags": {
              "Environment": "dev",
              "Name": "superset-vpc-default",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "superset-vpc-default",
              "Terraform": "true"
            },
            "vpc_id": "vpc-0eff67b7fceb0e080"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_default_route_table",
      "name": "default",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:618214806620:route-table/rtb-0508103f8521309d8",
            "default_route_table_id": "rtb-0508103f8521309d8",
            "id": "rtb-0508103f8521309d8",
            "owner_id": "618214806620",
            "propagating_vgws": [],
            "route": [],
            "tags": {
              "Environment": "dev",
              "Name": "superset-vpc-default",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "superset-vpc-default",
              "Terraform": "true"
            },
            "timeouts": {
              "create": "5m",
              "update": "5m"
            },
            "vpc_id": "vpc-0eff67b7fceb0e080"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsInVwZGF0ZSI6MzAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_default_security_group",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:618214806620:security-group/sg-07edf5c690320c0b9",
            "description": "default VPC security group",
            "egress": [],
            "id": "sg-07edf5c690320c0b9",
            "ingress": [],
            "name": "default",
            "name_prefix": "",
            "owner_id": "618214806620",
            "revoke_rules_on_delete": false,
            "tags": {
              "Environment": "dev",
              "Name": "superset-vpc-default",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "superset-vpc-default",
              "Terraform": "true"
            },
            "vpc_id": "vpc-0eff67b7fceb0e080"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_eip",
      "name": "nat",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "address": null,
            "allocation_id": "eipalloc-09c09b3e22de95ddc",
            "associate_with_private_ip": null,
            "association_id": "eipassoc-01199b1ae561cf1d1",
            "carrier_ip": "",
            "customer_owned_ip": "",
            "customer_owned_ipv4_pool": "",
            "domain": "vpc",
            "id": "eipalloc-09c09b3e22de95ddc",
            "instance": "",
            "network_border_group": "us-west-2",
            "network_interface": "eni-0abd190746e48abce",
            "private_dns": "ip-10-0-4-195.us-west-2.compute.internal",
            "private_ip": "10.0.4.195",
            "public_dns": "ec2-52-34-13-175.us-west-2.compute.amazonaws.com",
            "public_ip": "52.34.13.175",
            "public_ipv4_pool": "amazon",
            "tags": {
              "Environment": "dev",
              "Name": "superset-vpc-us-west-2a",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "superset-vpc-us-west-2a",
              "Terraform": "true"
            },
            "timeouts": null,
            "vpc": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxODAwMDAwMDAwMDAsInJlYWQiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_internet_gateway",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:618214806620:internet-gateway/igw-0fe99720fb89ddb82",
            "id": "igw-0fe99720fb89ddb82",
            "owner_id": "618214806620",
            "tags": {
              "Environment": "dev",
              "Name": "superset-vpc",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "superset-vpc",
              "Terraform": "true"
            },
            "timeouts": null,
            "vpc_id": "vpc-0eff67b7fceb0e080"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_nat_gateway",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "allocation_id": "eipalloc-09c09b3e22de95ddc",
            "association_id": "eipassoc-01199b1ae561cf1d1",
            "connectivity_type": "public",
            "id": "nat-0bf75cdd19da43736",
            "network_interface_id": "eni-0abd190746e48abce",
            "private_ip": "10.0.4.195",
            "public_ip": "52.34.13.175",
            "secondary_allocation_ids": [],
            "secondary_private_ip_address_count": 0,
            "secondary_private_ip_addresses": [],
            "subnet_id": "subnet-02f871694d657d56a",
            "tags": {
              "Environment": "dev",
              "Name": "superset-vpc-us-west-2a",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "superset-vpc-us-west-2a",
              "Terraform": "true"
            },
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTgwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.vpc.aws_eip.nat",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "private_nat_gateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "carrier_gateway_id": "",
            "core_network_arn": "",
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "",
            "id": "r-rtb-04ddc13020bc39fd41080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "local_gateway_id": "",
            "nat_gateway_id": "nat-0bf75cdd19da43736",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-04ddc13020bc39fd4",
            "state": "active",
            "timeouts": {
              "create": "5m",
              "delete": null,
              "update": null
            },
            "transit_gateway_id": "",
            "vpc_endpoint_id": "",
            "vpc_peering_connection_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.aws_eip.nat",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_nat_gateway.this",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "public_internet_gateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "carrier_gateway_id": "",
            "core_network_arn": "",
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "igw-0fe99720fb89ddb82",
            "id": "r-rtb-0aebb6f635f75618d1080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "local_gateway_id": "",
            "nat_gateway_id": "",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-0aebb6f635f75618d",
            "state": "active",
            "timeouts": {
              "create": "5m",
              "delete": null,
              "update": null
            },
            "transit_gateway_id": "",
            "vpc_endpoint_id": "",
            "vpc_peering_connection_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:618214806620:route-table/rtb-04ddc13020bc39fd4",
            "id": "rtb-04ddc13020bc39fd4",
            "owner_id": "618214806620",
            "propagating_vgws": [],
            "route": [
              {
                "carrier_gateway_id": "",
                "cidr_block": "0.0.0.0/0",
                "core_network_arn": "",
                "destination_prefix_list_id": "",
                "egress_only_gateway_id": "",
                "gateway_id": "",
                "ipv6_cidr_block": "",
                "local_gateway_id": "",
                "nat_gateway_id": "nat-0bf75cdd19da43736",
                "network_interface_id": "",
                "transit_gateway_id": "",
                "vpc_endpoint_id": "",
                "vpc_peering_connection_id": ""
              }
            ],
            "tags": {
              "Environment": "dev",
              "Name": "superset-vpc-private",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "superset-vpc-private",
              "Terraform": "true"
            },
            "timeouts": null,
            "vpc_id": "vpc-0eff67b7fceb0e080"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:618214806620:route-table/rtb-0aebb6f635f75618d",
            "id": "rtb-0aebb6f635f75618d",
            "owner_id": "618214806620",
            "propagating_vgws": [],
            "route": [
              {
                "carrier_gateway_id": "",
                "cidr_block": "0.0.0.0/0",
                "core_network_arn": "",
                "destination_prefix_list_id": "",
                "egress_only_gateway_id": "",
                "gateway_id": "igw-0fe99720fb89ddb82",
                "ipv6_cidr_block": "",
                "local_gateway_id": "",
                "nat_gateway_id": "",
                "network_interface_id": "",
                "transit_gateway_id": "",
                "vpc_endpoint_id": "",
                "vpc_peering_connection_id": ""
              }
            ],
            "tags": {
              "Environment": "dev",
              "Name": "superset-vpc-public",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "superset-vpc-public",
              "Terraform": "true"
            },
            "timeouts": null,
            "vpc_id": "vpc-0eff67b7fceb0e080"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0225c709ff09cb7be",
            "route_table_id": "rtb-04ddc13020bc39fd4",
            "subnet_id": "subnet-0e3dd2ce96486af92",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-07f39fbd7a7427eed",
            "route_table_id": "rtb-04ddc13020bc39fd4",
            "subnet_id": "subnet-0b2f66184c5561ca2",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0a4b1a994b476c956",
            "route_table_id": "rtb-04ddc13020bc39fd4",
            "subnet_id": "subnet-0017f503328b03400",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0ab9f8a69493fbb17",
            "route_table_id": "rtb-0aebb6f635f75618d",
            "subnet_id": "subnet-02f871694d657d56a",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-091f9269eea953a24",
            "route_table_id": "rtb-0aebb6f635f75618d",
            "subnet_id": "subnet-0d5d942ee375d6a87",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-082f97e8f6e9db7e0",
            "route_table_id": "rtb-0aebb6f635f75618d",
            "subnet_id": "subnet-04384277c535c8e77",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:618214806620:subnet/subnet-0e3dd2ce96486af92",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-west-2a",
            "availability_zone_id": "usw2-az1",
            "cidr_block": "10.0.1.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-0e3dd2ce96486af92",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "618214806620",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Environment": "dev",
              "Name": "superset-vpc-private-us-west-2a",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "superset-vpc-private-us-west-2a",
              "Terraform": "true"
            },
            "timeouts": null,
            "vpc_id": "vpc-0eff67b7fceb0e080"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:618214806620:subnet/subnet-0b2f66184c5561ca2",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-west-2b",
            "availability_zone_id": "usw2-az2",
            "cidr_block": "10.0.2.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-0b2f66184c5561ca2",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "618214806620",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Environment": "dev",
              "Name": "superset-vpc-private-us-west-2b",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "superset-vpc-private-us-west-2b",
              "Terraform": "true"
            },
            "timeouts": null,
            "vpc_id": "vpc-0eff67b7fceb0e080"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": 2,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:618214806620:subnet/subnet-0017f503328b03400",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-west-2c",
            "availability_zone_id": "usw2-az3",
            "cidr_block": "10.0.3.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-0017f503328b03400",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "618214806620",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Environment": "dev",
              "Name": "superset-vpc-private-us-west-2c",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "superset-vpc-private-us-west-2c",
              "Terraform": "true"
            },
            "timeouts": null,
            "vpc_id": "vpc-0eff67b7fceb0e080"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:618214806620:subnet/subnet-02f871694d657d56a",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-west-2a",
            "availability_zone_id": "usw2-az1",
            "cidr_block": "10.0.4.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-02f871694d657d56a",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "618214806620",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Environment": "dev",
              "Name": "superset-vpc-public-us-west-2a",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "superset-vpc-public-us-west-2a",
              "Terraform": "true"
            },
            "timeouts": null,
            "vpc_id": "vpc-0eff67b7fceb0e080"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:618214806620:subnet/subnet-0d5d942ee375d6a87",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-west-2b",
            "availability_zone_id": "usw2-az2",
            "cidr_block": "10.0.5.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-0d5d942ee375d6a87",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "618214806620",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Environment": "dev",
              "Name": "superset-vpc-public-us-west-2b",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "superset-vpc-public-us-west-2b",
              "Terraform": "true"
            },
            "timeouts": null,
            "vpc_id": "vpc-0eff67b7fceb0e080"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:618214806620:subnet/subnet-04384277c535c8e77",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-west-2c",
            "availability_zone_id": "usw2-az3",
            "cidr_block": "10.0.6.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-04384277c535c8e77",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "618214806620",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Environment": "dev",
              "Name": "superset-vpc-public-us-west-2c",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "superset-vpc-public-us-west-2c",
              "Terraform": "true"
            },
            "timeouts": null,
            "vpc_id": "vpc-0eff67b7fceb0e080"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:618214806620:vpc/vpc-0eff67b7fceb0e080",
            "assign_generated_ipv6_cidr_block": false,
            "cidr_block": "10.0.0.0/16",
            "default_network_acl_id": "acl-087cc658b62d70000",
            "default_route_table_id": "rtb-0508103f8521309d8",
            "default_security_group_id": "sg-07edf5c690320c0b9",
            "dhcp_options_id": "dopt-0b937fdc63d6608a3",
            "enable_dns_hostnames": true,
            "enable_dns_support": true,
            "enable_network_address_usage_metrics": false,
            "id": "vpc-0eff67b7fceb0e080",
            "instance_tenancy": "default",
            "ipv4_ipam_pool_id": null,
            "ipv4_netmask_length": null,
            "ipv6_association_id": "",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_network_border_group": "",
            "ipv6_ipam_pool_id": "",
            "ipv6_netmask_length": 0,
            "main_route_table_id": "rtb-0508103f8521309d8",
            "owner_id": "618214806620",
            "tags": {
              "Environment": "dev",
              "Name": "superset-vpc",
              "Terraform": "true"
            },
            "tags_all": {
              "Environment": "dev",
              "Name": "superset-vpc",
              "Terraform": "true"
            }
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "create_before_destroy": true
        }
      ]
    }
  ],
  "check_results": null
}
